axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Likelihood"))+xlab("Theta")+geom_hline(yintercept = 0.61,linetype="dotted")+geom_vline(xintercept = 2.44,linetype="dotted")
lkb<-function(theta){
return(dbinom(8,10,theta))
}
LB<-NULL
theta<-seq(0,1,0.01)
for (i in 1:length(theta)){
LB<-c(LB,dbinom(8,10,theta[i]))
}
df<-data.frame(theta=theta, Likelihood=LB)
ggplot(data = df, aes(x=theta, y=Likelihood))+geom_line()+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "",
#legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Likelihood"))+xlab("Theta")
ggplot(data = df, aes(x=theta, y=Likelihood))+geom_line()+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "",
#legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Likelihood"))+xlab("Theta")
8/10
ggplot(data = df, aes(x=theta, y=Likelihood))+geom_line()+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "",
#legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Likelihood"))+xlab("Theta")++geom_hline(yintercept = 0.8,linetype="dotted")+geom_vline(xintercept = 0.31,linetype="dotted")
ggplot(data = df, aes(x=theta, y=Likelihood))+geom_line()+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "",
#legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Likelihood"))+xlab("Theta")+geom_hline(yintercept = 0.8,linetype="dotted")+geom_vline(xintercept = 0.31,linetype="dotted")
ggplot(data = df, aes(x=theta, y=Likelihood))+geom_line()+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "",
#legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Likelihood"))+xlab("Theta")+geom_hline(yintercept = 0.31,linetype="dotted")+geom_vline(xintercept = 0.8,linetype="dotted")
ggplot(data = df, aes(x=theta, y=Likelihood))+geom_line()+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "",
#legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Likelihood"))+xlab("Theta")+geom_hline(yintercept = 0.3,linetype="dotted")+geom_vline(xintercept = 0.8,linetype="dotted")
ggplot(data = df, aes(x=theta, y=Likelihood))+geom_line()+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "",
#legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Likelihood"))+xlab("Theta")+geom_hline(yintercept = 0.305,linetype="dotted")+geom_vline(xintercept = 0.8,linetype="dotted")
ggplot(data = df, aes(x=theta, y=Likelihood))+geom_line()+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "",
#legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Likelihood"))+xlab("Theta")+geom_hline(yintercept = 0.302,linetype="dotted")+geom_vline(xintercept = 0.8,linetype="dotted")
(0-50)*(14-55.4)
(25-50)*(38-55.4)
(75-50)*(76-55.4)
(100-50)*(95-55.4)
1980+515+435+2070
25*25
50^2
2500+2500+625+625
5000/6250
39.52847/6250
39.52847/sqrt(6250)
sqrt(6250)
39.52847/79.05694
55.4-0.8*50
15.4+0.8*25
15.4+0.8*50
15.4+0.8*75
15.4+0.8*100
74.84+96000*0.53+1.129*16-50*0.005-0.008*250
74.84+96*0.53+1.129*16-50*0.005-0.008*250
74.84+96000*0.053+1.129*16-50*0.005-0.008*250
74.84+0.053*96000
0.053*96000
0.053*96
74.84+96*0.053+1.129*16-50*0.005-0.008*0.250
74.84+0.053*96+1.129*16-0.005*50-0.008*250
-0.03/(sqrt(0.6*0.4/750))
install.packages("plotly")
library("plotly")
k<-rnorm(10, mean=5,sd=3)
k
install.packages("persDx")
k
x<-seq(-19.99,20,0.01)
y<-seq(0.01,40,0.01)
x<-seq(-19.99,20,0.01)
y<-seq(0.01,40,0.01)
z<-NULL
for (i in 1:length(x)){
z<-c(z,-5*log(y[i])-(1/2*y[i])*( (k[1]-x[i])^2+(k[2]-x[i])^2+(k[3]-x[i])^2+(k[4]-x[i])^2+(k[5]-x[i])^2+(k[6]-x[i])^2+(k[7]-x[i])^2+(k[8]-x[i])^2+(k[9]-x[i])^2+(k[10]-x[i])^2))
}
persp(x,y,z)
persp(x,y)
persp(x,y,x)
persp(z)
persp(x,y,z)
f <- function(x, y) { r<-(z,-5*log(y[i])-(1/2*y[i])*( (k[1]-x[i])^2+(k[2]-x[i])^2+(k[3]-x[i])^2+(k[4]-x[i])^2+(k[5]-x[i])^2+(k[6]-x[i])^2+(k[7]-x[i])^2+(k[8]-x[i])^2+(k[9]-x[i])^2+(k[10]-x[i])^2)) }
f <- function(x, y) { r<-(-5*log(y[i])-(1/2*y[i])*( (k[1]-x[i])^2+(k[2]-x[i])^2+(k[3]-x[i])^2+(k[4]-x[i])^2+(k[5]-x[i])^2+(k[6]-x[i])^2+(k[7]-x[i])^2+(k[8]-x[i])^2+(k[9]-x[i])^2+(k[10]-x[i])^2)) }
l<-outer(x,y,f)
x<-seq(-19.99,20,0.1)
y<-seq(0.01,40,0.1)
f <- function(x, y) { r<-(-5*log(y[i])-(1/2*y[i])*( (k[1]-x[i])^2+(k[2]-x[i])^2+(k[3]-x[i])^2+(k[4]-x[i])^2+(k[5]-x[i])^2+(k[6]-x[i])^2+(k[7]-x[i])^2+(k[8]-x[i])^2+(k[9]-x[i])^2+(k[10]-x[i])^2)) }
l<-outer(x,y,f)
x <- seq(-10, 10, length.out = 30)
y <- x
f <- function(x, y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
ltheta = 120, shade = 0.75, ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
x <- seq(-10, 10, length.out = 30)
y <- x
f <- function(x, y) { r <- x^2+y^2; 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
ltheta = 120, shade = 0.75, ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
f <- function(x, y) { r <- x^2+y^2}
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
ltheta = 120, shade = 0.75, ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
f <- function(x, y) { r <- -x^2+y^2}
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
f <- function(x, y) { r <- -x^2-y^2}
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
ltheta = 120, shade = 0.75, ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
f <- function(x, y) { r <- -x^2-6*y}
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
f <- function(x, y) { r <- -x^2-6*y^4}
z <- outer(x, y, f)
z[is.na(z)] <- 1
op <- par(bg = "white")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue")
persp(x, y, z, theta = 30, phi = 30, expand = 0.5, col = "lightblue",
ltheta = 120, shade = 0.75, ticktype = "detailed",
xlab = "X", ylab = "Y", zlab = "Sinc( r )"
) -> res
10/(0.8*0.2)
1/62.5
1/sqrt(62.5)
0.13*1.96
0.8-0.25
0.8+0.25
x<-seq(-5,5,0.1)
plot(x,-x^2)
plot(x,-30*x^2, type = "l")
lines(x,x^2, col = 2)
lines(x,-x^2, col = 2)
plot(x,-30*x^2, type = "l")
lines(x,-x^2, col = 2)
plot(x,-5*x^2, type = "l")
lines(x,-x^2, col = 2)
x<-seq(-10,10,0.1)
plot(x,-5*x^2, type = "l")
lines(x,-x^2, col = 2)
hist(rnorm(10000, mean=5000, sd=300))
hist(rnorm(10000, mean=5000, sd=1000))
hist(rnorm(10000, mean=5000, sd=2000))
hist(rnorm(10000, mean=5000, sd=3000))
hist(rnorm(10000, mean=5000, sd=2000))
hist(rnorm(10000, mean=7000, sd=2000))
hist(rnorm(10000, mean=7000, sd=1000))
hist(rnorm(10000, mean=7000, sd=2000))
0.2/(0.5/sqrt(300))
(0.5/sqrt(300))
0.2/(0.5/sqrt(300))
0.2/0.03
0.2/0.0289
b<-c(138,117,113,134,118,128,125,126,119,119)
a<-c(131,110,104,119,124,123,120,131,87,111)
d<-b-a
d
mean(d)
sd(d)
7.7/(10.59/sqrt(10))
a
a[3]<-102
a[3]<-106
d<-b-a
d
mean(d)
sd(d)
a[3]<-104
a[2]<-112
a[9]<-95
d<-b-a
d
mean(d)
sd(d)
s<-sd(d)
6.7/(s/sqrt(10))
a[9]<-100
mean(d)
a[4]<-123
d<-b-a
mean(d)
s<-sd(d)
mean(d)/(s/sqrt(10))
a<-c(131,110,104,119,124,123,120,131,87,111)
a[10]<-123
m<-mean(d)
s<-sd(d)
m/(s/sqrt(10))
a<-c(131,110,104,119,124,123,120,131,87,111)
a[10]<-123
a<[9]<-115
a[9]<-115
m<-mean(d)
d<-b-a
m<-mean(d)
s<-sd(d)
m/(s/sqrt(10))
a<-c(131,110,104,119,124,123,120,131,87,111)
a[9]<-115
d<-b-a
m<-mean(d)
s<-sd(d)
m/(s/sqrt(10))
a<-c(131,110,104,119,124,123,120,131,87,111)
a[10]<-123
d<-b-a
d
m<-mean(d)
s<-sd(d)
m/(s/sqrt(10))
a[10]<-120
d<-b-a
s<-sd(d)
m<-mean(d)
m/(s/sqrt(10))
a
d
d
mean(d)
m<-mean(d)
sd(d)
s<-sd(d)
m/(s/sqrt(10))
a[7]<-121
d<-b-a
m<-mean(d)
s<-sd(d)
m/(s/sqrt(10))
a
a[1]<-129
m<-mean(d)
d<-b-a
s<-sd(d)
m<-mean(d)
m/(s/sqrt(10))
d
m
s
a[10]<-122
d<-b-a
m<-mean(d)
s<-sd(d)
m/(s/sqrt(10))
a[7]<-124
d<-b-a
m<-mean(d)
s<-sd(d)
m/(s/sqrt(10))
a
b
d<-b-a
d
m<-mean(d)
m
s<-sd(d)
s
m/(s/sqrt(10))
m/(11.29/sqrt(10))
1.833*11.29/sqrt(10)
2.262*11.29/sqrt(10)
3.25*11.29/sqrt(10)
17.440-0.018*335-3.238*2.77+0.811*15.5+2.926
qt(0.025,df=3, lower.tail = FALSE)
a<-c(138,117,113,134,118,128,125,126,119,119)
b<-c(129,110,104,119,124,123,124,131,87,122)
d<-a-b
d
mean(d)
sd(d)
6.4/(sd(d)/sqrt(n))
6.4/(sd(d)/sqrt(10))
setwd("~/Desktop")
t2<-3
sigma12<-0.5
sigma21<-0.2
prop.immune<-0.1
nSeeds.1<-5
nSeeds.2<-5
rho.1<-0.2
rho.2<-0.5
alpha.as.1<-0.3
alpha.as.2<-0.3
R.1<-3
R.2<-2
ratio.qhqg<-1
lli.1<-0.2
lli.2<-0.2
pathogen.1<-"COVID-19"
pathogen.2<-"DELTA"
contact.reduction<-0.2
contact.reduction<-0.8
t.stop<-365
t.seed<-30
bc.1<-0.5
bc.2<-0.5
reinf<-1
typeIC<-1
inf.path.1.h<-0.2
inf.path.2.h<-0.2
inf.path.1.g<-0.1
inf.path.2.g<-0.1
#Mean number of daily contact at a global level (Using SOCRATES 15/02/2022 )
lambda.g<-8.29
#Compute the reproduction number related to the selected network.
source("function.multipathogen.new.R")
setwd("~/Documents/Work/PhD/Co-infection/Multi-phatogen")
#Compute the reproduction number related to the selected network.
source("function.multipathogen.new.R")
nSim<-50
epi.outbreak<-list()
nSeed<-1062021
set.seed(nSeed)
nm<-paste("t2_",t2, "_sigma12_",sigma12,"_sigma21_",sigma21,"_qh1_",inf.path.1.h,"_qg1_",inf.path.1.g,"_qh2_",inf.path.2.h,"_qg2_",inf.path.2.g, "_rho1_",rho.1,"_rho2_",rho.2,"_alpha1_",alpha.as.1,"_alpha2_",alpha.as.2,"_Path1",pathogen.1,"_Path2",pathogen.2,"_lli.1",lli.1,"_lli2",lli.2, sep = "")
print(nm)
for (i in 1:nSim){
print(i)
temp.HH.netw<-HH.networks[[sample(1:length(HH.networks),1)]]
epi.outbreak[[i]]<-sim.multipathogen(HH.network = temp.HH.netw, t2=t2, lambda.g = lambda.g, sigma12 = sigma12, sigma21 = sigma21, prop.immune = prop.immune, nSeeds.1 = nSeeds.1, nSeeds.2 = nSeeds.2, rho.1 = rho.1, rho.2 = rho.2, inf.path.1.h = inf.path.1.h,inf.path.1.g = inf.path.1.g, inf.path.2.h = inf.path.2.h,inf.path.2.g = inf.path.2.g, alpha.as.1=alpha.as.1,alpha.as.2=alpha.as.2, lli.1=lli.1,lli.2=lli.2, pathogen.1=pathogen.1, pathogen.2=pathogen.2, contact.reduction=contact.reduction, t.stop=t.stop, t.seed=t.seed, bc.1=bc.1, bc.2=bc.2, reinf=reinf, typeIC=typeIC)
}
load("~/Documents/Work/PhD/Co-infection/Multi-phatogen/HH_Networks_nVertex2500_nNetw100.RData")
nm<-paste("t2_",t2, "_sigma12_",sigma12,"_sigma21_",sigma21,"_qh1_",inf.path.1.h,"_qg1_",inf.path.1.g,"_qh2_",inf.path.2.h,"_qg2_",inf.path.2.g, "_rho1_",rho.1,"_rho2_",rho.2,"_alpha1_",alpha.as.1,"_alpha2_",alpha.as.2,"_Path1",pathogen.1,"_Path2",pathogen.2,"_lli.1",lli.1,"_lli2",lli.2, sep = "")
print(nm)
for (i in 1:nSim){
print(i)
temp.HH.netw<-HH.networks[[sample(1:length(HH.networks),1)]]
epi.outbreak[[i]]<-sim.multipathogen(HH.network = temp.HH.netw, t2=t2, lambda.g = lambda.g, sigma12 = sigma12, sigma21 = sigma21, prop.immune = prop.immune, nSeeds.1 = nSeeds.1, nSeeds.2 = nSeeds.2, rho.1 = rho.1, rho.2 = rho.2, inf.path.1.h = inf.path.1.h,inf.path.1.g = inf.path.1.g, inf.path.2.h = inf.path.2.h,inf.path.2.g = inf.path.2.g, alpha.as.1=alpha.as.1,alpha.as.2=alpha.as.2, lli.1=lli.1,lli.2=lli.2, pathogen.1=pathogen.1, pathogen.2=pathogen.2, contact.reduction=contact.reduction, t.stop=t.stop, t.seed=t.seed, bc.1=bc.1, bc.2=bc.2, reinf=reinf, typeIC=typeIC)
}
library(ergm)
nSim<-50
epi.outbreak<-list()
nSeed<-1062021
set.seed(nSeed)
nm<-paste("t2_",t2, "_sigma12_",sigma12,"_sigma21_",sigma21,"_qh1_",inf.path.1.h,"_qg1_",inf.path.1.g,"_qh2_",inf.path.2.h,"_qg2_",inf.path.2.g, "_rho1_",rho.1,"_rho2_",rho.2,"_alpha1_",alpha.as.1,"_alpha2_",alpha.as.2,"_Path1",pathogen.1,"_Path2",pathogen.2,"_lli.1",lli.1,"_lli2",lli.2, sep = "")
print(nm)
for (i in 1:nSim){
print(i)
temp.HH.netw<-HH.networks[[sample(1:length(HH.networks),1)]]
epi.outbreak[[i]]<-sim.multipathogen(HH.network = temp.HH.netw, t2=t2, lambda.g = lambda.g, sigma12 = sigma12, sigma21 = sigma21, prop.immune = prop.immune, nSeeds.1 = nSeeds.1, nSeeds.2 = nSeeds.2, rho.1 = rho.1, rho.2 = rho.2, inf.path.1.h = inf.path.1.h,inf.path.1.g = inf.path.1.g, inf.path.2.h = inf.path.2.h,inf.path.2.g = inf.path.2.g, alpha.as.1=alpha.as.1,alpha.as.2=alpha.as.2, lli.1=lli.1,lli.2=lli.2, pathogen.1=pathogen.1, pathogen.2=pathogen.2, contact.reduction=contact.reduction, t.stop=t.stop, t.seed=t.seed, bc.1=bc.1, bc.2=bc.2, reinf=reinf, typeIC=typeIC)
}
