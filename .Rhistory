temp.pimmune.pk<-c(temp.pimmune.pk, rep("0.8",2))
temp.pk11<-c(temp.pk11, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1)
temp.pk12<-c(temp.pk12, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
}
mean(temp.pk11)
quantile(temp.pk11,0.025)
quantile(temp.pk11,0.975)
mean(temp.pk12)
quantile(temp.pk12,0.025)
quantile(temp.pk12,0.975)
load("~/Documents/Work/PhD/Co-infection/Sims_v2023/DELTAOMIN/9/MP_Synth_nVertex2500_nNetw100DELTA_&_OMICRON_R15_R28_qhqg8.27_t225_sigma12_0.05_sigma21_0.05_alpha10.5_alpha20.5_rho10.69_rho20.69_lli11_lli21_NetSynth_CtcRed0.5_PImm0_tSeed1000_bc11_bc21.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("25",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.pimmune<-c(temp.pimmune, rep("0",2*length(epi.det$Days)))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
temp.pk11<-NULL
temp.pk12<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("25",2))
temp.pimmune.pk<-c(temp.pimmune.pk, rep("0",2))
temp.pk11<-c(temp.pk11, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1)
temp.pk12<-c(temp.pk12, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
}
mean(temp.pk11)
quantile(temp.pk11,0.025)
quantile(temp.pk11,0.975)
mean(temp.pk12)
quantile(temp.pk12,0.025)
quantile(temp.pk12,0.975)
load("~/Documents/Work/PhD/Co-infection/Sims_v2023/DELTAOMIN/12/MP_Synth_nVertex2500_nNetw100DELTA_&_OMICRON_R15_R28_qhqg8.27_t225_sigma12_0.05_sigma21_0.05_alpha10.5_alpha20.5_rho10.69_rho20.69_lli11_lli21_NetSynth_CtcRed0.5_PImm0.4_tSeed1000_bc11_bc21.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("25",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.pimmune<-c(temp.pimmune, rep("0.4",2*length(epi.det$Days)))
#temp.nc<-c(temp.nc, rep(a[ncurves+i],2*length(epi.det$Days)))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
temp.pk11<-NULL
temp.pk12<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("25",2))
temp.pimmune.pk<-c(temp.pimmune.pk, rep("0.4",2))
temp.pk11<-c(temp.pk11, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1)
temp.pk12<-c(temp.pk12, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
}
mean(temp.pk11)
quantile(temp.pk11,0.025)
quantile(temp.pk11,0.975)
mean(temp.pk12)
quantile(temp.pk12,0.025)
quantile(temp.pk12,0.975)
load("~/Documents/Work/PhD/Co-infection/Sims_v2023/DELTAOMIN/15/MP_Synth_nVertex2500_nNetw100DELTA_&_OMICRON_R15_R28_qhqg8.27_t225_sigma12_0.05_sigma21_0.05_alpha10.5_alpha20.5_rho10.69_rho20.69_lli11_lli21_NetSynth_CtcRed0.5_PImm0.8_tSeed1000_bc11_bc21.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("25",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.pimmune<-c(temp.pimmune, rep("0.8",2*length(epi.det$Days)))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
temp.pk11<-NULL
temp.pk12<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("25",2))
temp.pimmune.pk<-c(temp.pimmune.pk, rep("0.8",2))
temp.pk11<-c(temp.pk11, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1)
temp.pk12<-c(temp.pk12, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
}
mean(temp.pk11)
quantile(temp.pk11,0.025)
quantile(temp.pk11,0.975)
mean(temp.pk12)
quantile(temp.pk12,0.025)
quantile(temp.pk12,0.975)
load("~/Documents/Work/PhD/Co-infection/Sims_v2023/DELTAOMIN/18/MP_Synth_nVertex2500_nNetw100DELTA_&_OMICRON_R15_R28_qhqg8.27_t250_sigma12_0.05_sigma21_0.05_alpha10.5_alpha20.5_rho10.69_rho20.69_lli11_lli21_NetSynth_CtcRed0.5_PImm0_tSeed1000_bc11_bc21.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("50",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.pimmune<-c(temp.pimmune, rep("0",2*length(epi.det$Days)))
#temp.nc<-c(temp.nc, rep(a[2*ncurves+i],2*length(epi.det$Days)))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
temp.pk11<-NULL
temp.pk12<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("50",2))
temp.pimmune.pk<-c(temp.pimmune.pk, rep("0",2))
temp.pk11<-c(temp.pk11, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1)
temp.pk12<-c(temp.pk12, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
}
mean(temp.pk11)
quantile(temp.pk11,0.025)
quantile(temp.pk11,0.975)
mean(temp.pk12)
quantile(temp.pk12,0.025)
quantile(temp.pk12,0.975)
load("~/Documents/Work/PhD/Co-infection/Sims_v2023/DELTAOMIN/21/MP_Synth_nVertex2500_nNetw100DELTA_&_OMICRON_R15_R28_qhqg8.27_t250_sigma12_0.05_sigma21_0.05_alpha10.5_alpha20.5_rho10.69_rho20.69_lli11_lli21_NetSynth_CtcRed0.5_PImm0.4_tSeed1000_bc11_bc21.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("50",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.pimmune<-c(temp.pimmune, rep("0.4",2*length(epi.det$Days)))
#temp.nc<-c(temp.nc, rep(a[3*ncurves+i],2*length(epi.det$Days)))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
temp.pk11<-NULL
temp.pk12<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("50",2))
temp.pimmune.pk<-c(temp.pimmune.pk, rep("0.4",2))
temp.pk11<-c(temp.pk11, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1)
temp.pk12<-c(temp.pk12, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
}
mean(temp.pk11)
quantile(temp.pk11,0.025)
quantile(temp.pk11,0.975)
mean(temp.pk12)
quantile(temp.pk12,0.025)
quantile(temp.pk12,0.975)
load("~/Documents/Work/PhD/Co-infection/Sims_v2023/DELTAOMIN/24/MP_Synth_nVertex2500_nNetw100DELTA_&_OMICRON_R15_R28_qhqg8.27_t250_sigma12_0.05_sigma21_0.05_alpha10.5_alpha20.5_rho10.69_rho20.69_lli11_lli21_NetSynth_CtcRed0.5_PImm0.8_tSeed1000_bc11_bc21.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("50",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.pimmune<-c(temp.pimmune, rep("0.8",2*length(epi.det$Days)))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
temp.pk11<-NULL
temp.pk12<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("50",2))
temp.pimmune.pk<-c(temp.pimmune.pk, rep("0.8",2))
temp.pk11<-c(temp.pk11, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1)
temp.pk12<-c(temp.pk12, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
}
mean(temp.pk11)
quantile(temp.pk11,0.025)
quantile(temp.pk11,0.975)
mean(temp.pk12)
quantile(temp.pk12,0.025)
quantile(temp.pk12,0.975)
dt.Prev<-data.frame("Prevalence"=temp.prev,"Days"=temp.time,"IntroductionTime"=temp.t2, "VaccinationCoverage"=temp.pimmune, "Pathogen"=temp.path, "TempC"=temp.nc)
dt.Prev$Pathogen<-factor(dt.Prev$Pathogen, levels = c("Path1","Path2"))
dt.Prev$IntroductionTime<-factor(dt.Prev$IntroductionTime, levels = c("0","25","50"))
dt.Prev$VaccinationCoverage<-factor(dt.Prev$VaccinationCoverage, levels = c("0","0.4","0.8"))
dt.1<-dt.Prev[which(dt.Prev$TempC==1),]
dt.2<-dt.Prev[which(dt.Prev$TempC==2),]
dt.3<-dt.Prev[which(dt.Prev$TempC==3),]
dt.4<-dt.Prev[which(dt.Prev$TempC==4),]
dt.5<-dt.Prev[which(dt.Prev$TempC==5),]
dt.6<-dt.Prev[which(dt.Prev$TempC==6),]
dt.7<-dt.Prev[which(dt.Prev$TempC==7),]
dt.8<-dt.Prev[which(dt.Prev$TempC==8),]
dt.9<-dt.Prev[which(dt.Prev$TempC==9),]
dt.10<-dt.Prev[which(dt.Prev$TempC==10),]
ggplot(data = dt.Prev, aes(x=Days,y=Prevalence, col=Pathogen))+geom_line(data=dt.1)+geom_line(data = dt.2)+geom_line(data = dt.3)+geom_line(data = dt.4)+geom_line(data = dt.5)+geom_line(data = dt.6)+geom_line(data = dt.7)+geom_line(data = dt.8)+geom_line(data = dt.9)+geom_line(data = dt.10)+  scale_color_manual(values = c("#39558CCF","#3CBC75FF"),labels=c("COVID-19","FLU-A"))+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Prevalence"))+xlab("Days")+facet_grid(IntroductionTime ~ VaccinationCoverage,  scales = "fixed", labeller = labeller(VaccinationCoverage=c("0"= "Vacc.coverage=0%","0.4"= "Vacc.coverage=40%","0.8"="Vacc.coverage=80%" ), IntroductionTime=c("0"="Beginning","25"="Peak","50"="Ending")))+labs(fill="Strain")
dt.Peak<-data.frame("PeakCases"=temp.pk,"IntroductionTime"=temp.t2.pk, "VaccinationCoverage"=temp.pimmune.pk, "Pathogen"=temp.path.pk)
mean
mean(dt.Peak$PeakCases[which(dt.Peak$IntroductionTime=="25" & dt.Peak$Pathogen=="Path2" & dt.Peak$VaccinationCoverage=="0")])
mean(dt.Peak$PeakCases[which(dt.Peak$IntroductionTime=="50" & dt.Peak$Pathogen=="Path2" & dt.Peak$VaccinationCoverage=="0.4")])
mean(dt.Peak$PeakCases[which(dt.Peak$IntroductionTime=="25" & dt.Peak$Pathogen=="Path2" & dt.Peak$VaccinationCoverage=="0.4")])
ggplot(data = dt.Peak, aes(x=IntroductionTime,y=PeakCases, fill=Pathogen))+geom_violin()+scale_fill_manual(values = c("#39558CCF","#3CBC75FF"), labels=c("DELTA", "OMICRON"))+stat_summary(fun.y=mean, geom="point", shape=15, size=3, color="navyblue", fill="black", aes(group=Pathogen),position=position_dodge(.9))+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Cases at Peak"))+xlab("Introduction time (Omicron) - Epidemic progression (Delta)")+facet_grid( ~ VaccinationCoverage,  scales = "fixed", labeller = labeller(VaccinationCoverage=c("0"= "Vacc.coverage=0%","0.4"= "Vacc.coverage=40%", "0.8"= "Vacc.coverage=80%")))+scale_x_discrete(labels=c("Beginning","Peak","Ending"))+labs(fill="Strain")
dt.Peak<-data.frame("PeakCases"=temp.pk,"IntroductionTime"=temp.t2.pk, "VaccinationCoverage"=temp.pimmune.pk, "Pathogen"=temp.path.pk)
dt.Peak$Pathogen<-factor(dt.Peak$Pathogen, levels = c("Path1","Path2"))
dt.Peak$IntroductionTime<-factor(dt.Peak$IntroductionTime, levels = c("0","15","50"))
dt.Peak$VaccinationCoverage<-factor(dt.Peak$VaccinationCoverage, levels = c("0","0.4","0.8"))
ggplot(data = dt.Peak, aes(x=IntroductionTime,y=PeakCases, fill=Pathogen))+geom_violin()+scale_fill_manual(values = c("#39558CCF","#3CBC75FF"), labels=c("DELTA", "OMICRON"))+stat_summary(fun.y=mean, geom="point", shape=15, size=3, color="navyblue", fill="black", aes(group=Pathogen),position=position_dodge(.9))+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Cases at Peak"))+xlab("Introduction time (Omicron) - Epidemic progression (Delta)")+facet_grid( ~ VaccinationCoverage,  scales = "fixed", labeller = labeller(VaccinationCoverage=c("0"= "Vacc.coverage=0%","0.4"= "Vacc.coverage=40%", "0.8"= "Vacc.coverage=80%")))+scale_x_discrete(labels=c("Beginning","Peak","Ending"))+labs(fill="Strain")
dt.Peak<-data.frame("PeakCases"=temp.pk,"IntroductionTime"=temp.t2.pk, "VaccinationCoverage"=temp.pimmune.pk, "Pathogen"=temp.path.pk)
dt.Peak$Pathogen<-factor(dt.Peak$Pathogen, levels = c("Path1","Path2"))
ggplot(data = dt.Peak, aes(x=IntroductionTime,y=PeakCases, fill=Pathogen))+geom_violin()+scale_fill_manual(values = c("#39558CCF","#3CBC75FF"), labels=c("DELTA", "OMICRON"))+stat_summary(fun.y=mean, geom="point", shape=15, size=3, color="navyblue", fill="black", aes(group=Pathogen),position=position_dodge(.9))+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Cases at Peak"))+xlab("Introduction time (Omicron) - Epidemic progression (Delta)")+facet_grid( ~ VaccinationCoverage,  scales = "fixed", labeller = labeller(VaccinationCoverage=c("0"= "Vacc.coverage=0%","0.4"= "Vacc.coverage=40%", "0.8"= "Vacc.coverage=80%")))+scale_x_discrete(labels=c("Beginning","Peak","Ending"))+labs(fill="Strain")
dt.Peak<-data.frame("PeakCases"=temp.pk,"IntroductionTime"=temp.t2.pk, "VaccinationCoverage"=temp.pimmune.pk, "Pathogen"=temp.path.pk)
dt.Peak$Pathogen<-factor(dt.Peak$Pathogen, levels = c("Path1","Path2"))
dt.Peak$VaccinationCoverage<-factor(dt.Peak$VaccinationCoverage, levels = c("0","0.4","0.8"))
ggplot(data = dt.Peak, aes(x=IntroductionTime,y=PeakCases, fill=Pathogen))+geom_violin()+scale_fill_manual(values = c("#39558CCF","#3CBC75FF"), labels=c("DELTA", "OMICRON"))+stat_summary(fun.y=mean, geom="point", shape=15, size=3, color="navyblue", fill="black", aes(group=Pathogen),position=position_dodge(.9))+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Cases at Peak"))+xlab("Introduction time (Omicron) - Epidemic progression (Delta)")+facet_grid( ~ VaccinationCoverage,  scales = "fixed", labeller = labeller(VaccinationCoverage=c("0"= "Vacc.coverage=0%","0.4"= "Vacc.coverage=40%", "0.8"= "Vacc.coverage=80%")))+scale_x_discrete(labels=c("Beginning","Peak","Ending"))+labs(fill="Strain")
dt.Peak<-data.frame("PeakCases"=temp.pk,"IntroductionTime"=temp.t2.pk, "VaccinationCoverage"=temp.pimmune.pk, "Pathogen"=temp.path.pk)
dt.Peak$Pathogen<-factor(dt.Peak$Pathogen, levels = c("Path1","Path2"))
dt.Peak$IntroductionTime<-factor(dt.Peak$IntroductionTime, levels = c("0","25","50"))
dt.Peak$VaccinationCoverage<-factor(dt.Peak$VaccinationCoverage, levels = c("0","0.4","0.8"))
ggplot(data = dt.Peak, aes(x=IntroductionTime,y=PeakCases, fill=Pathogen))+geom_violin()+scale_fill_manual(values = c("#39558CCF","#3CBC75FF"), labels=c("DELTA", "OMICRON"))+stat_summary(fun.y=mean, geom="point", shape=15, size=3, color="navyblue", fill="black", aes(group=Pathogen),position=position_dodge(.9))+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Cases at Peak"))+xlab("Introduction time (Omicron) - Epidemic progression (Delta)")+facet_grid( ~ VaccinationCoverage,  scales = "fixed", labeller = labeller(VaccinationCoverage=c("0"= "Vacc.coverage=0%","0.4"= "Vacc.coverage=40%", "0.8"= "Vacc.coverage=80%")))+scale_x_discrete(labels=c("Beginning","Peak","Ending"))+labs(fill="Strain")
# Pathogens and their viral characteristics ----
InfMeas.SynthPath<-function(t){
t.ret<-NULL
for (i in 1:length(t)){
if (t[i] <=2){
t.ret<-c(t.ret,(0.25*t[i]))
}else{
t.ret<-c(t.ret,(-0.25*t[i]+1))
}
}
return(t.ret)
}
time.points<-seq(0,4,0.1)
#ip.covid19<-dlnorm(time.points,meanlog = log(5.2),sdlog = log(1.7))
#ip.fluA<-dlnorm(time.points,meanlog = log(1.4),sdlog = log(1.51))
#ip.rsv<-dlnorm(time.points,meanlog = log(4.4),sdlog = log(1.24))
infM<-InfMeas.SynthPath(time.points)
#inf.rsv<-dgamma(time.points,shape = 15, rate = 2.6)/ (pgamma(12,shape = 15,rate = 2.6))
#Inc.Periods<-data.frame(x=rep(time.points,2),y=c(ip.covid19,ip.fluA), Disease=c(rep("COVID-19",length(time.points)),rep("FLU-A",length(time.points))), Quantity=rep("IncubationPeriod",length(time.points)*2) )
Inf.Measure<-data.frame(x=time.points,y=infM , Quantity=rep("InfectiousnessMeasure",length(time.points)))
dt<-data.frame(x=Inf.Measure$x, y=Inf.Measure$y, Quantity=c(as.character(Inf.Measure$Quantity)))
pt<-data.frame(x=c(0,0), y=c(0,0), Quantity=c("InfectiousnessMeasure"))
ggplot(dt, aes(x=x, y=y))+geom_line(data = Inf.Measure, aes(x=x, y=y),lwd=0.9,lty=1)+
theme_minimal()+theme(
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(0.8,"cm"),
legend.title = element_text(size=17, face = "bold"),
legend.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.title = element_text(size=20),
axis.text.y = element_text(size=16),
text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_brewer(palette = "Dark2")+geom_vline(xintercept = 1,colour="#fec44f",lty=2,lwd=1)+geom_vline(xintercept = 2,colour="#7fcdbb",lty=2,lwd=1)+geom_vline(xintercept = 3,colour="#2c7fb8",lty=2,lwd=1)
time.points<-seq(0,13,0.1)
#ip.covid19<-dlnorm(time.points,meanlog = log(5.2),sdlog = log(1.7))
#ip.fluA<-dlnorm(time.points,meanlog = log(1.4),sdlog = log(1.51))
#ip.rsv<-dlnorm(time.points,meanlog = log(4.4),sdlog = log(1.24))
inf.covid19<-dgamma(time.points,shape = 12, rate = 2.08)/ (pgamma(15,shape = 2,rate = 2.08))
inf.fluA<-dgamma(time.points,shape = 3.5, rate = 1.15)/ (pgamma(6.24,shape = 3.5,rate = 1.15))
#inf.rsv<-dgamma(time.points,shape = 15, rate = 2.6)/ (pgamma(12,shape = 15,rate = 2.6))
#Inc.Periods<-data.frame(x=rep(time.points,2),y=c(ip.covid19,ip.fluA), Disease=c(rep("COVID-19",length(time.points)),rep("FLU-A",length(time.points))), Quantity=rep("IncubationPeriod",length(time.points)*2) )
Inf.Measure<-data.frame(x=rep(time.points,2),y=c(inf.covid19,inf.fluA) , Disease=c(rep("COVID-19",length(time.points)),rep("FLU-A",length(time.points))), Quantity=rep("InfectiousnessMeasure",length(time.points)*2))
dt<-data.frame(x=Inf.Measure$x, y=Inf.Measure$y,Disease=c(as.character(Inf.Measure$Disease)), Quantity=c(as.character(Inf.Measure$Quantity)))
pt<-data.frame(x=c(0,0), y=c(0,0), Quantity=c("InfectiousnessMeasure"))
ggplot(dt, aes(x=x, y=y))+geom_line(data = Inf.Measure, aes(x=x, y=y, col=Disease),lwd=1.3,lty=1)+
theme_minimal()+theme(
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(0.8,"cm"),
legend.title = element_text(size=17, face = "bold"),
legend.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.title = element_text(size=20),
axis.text.y = element_text(size=16),
text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_brewer(palette = "Dark2")+geom_vline(xintercept = 11/2.08,colour="#1b9e77",lty=2,lwd=0.8)+geom_vline(xintercept = (2.5/1.15+1),colour="#d95f02",lty=2,lwd=0.8)
ggplot(dt, aes(x=x, y=y))+geom_line(data = Inf.Measure, aes(x=x, y=y),lwd=0.7,lty=1)+
theme_minimal()+theme(
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(0.8,"cm"),
legend.title = element_text(size=17, face = "bold"),
legend.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.title = element_text(size=20),
axis.text.y = element_text(size=16),
text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_brewer(palette = "Dark2")+geom_vline(xintercept = 1,colour="#fec44f",lty=2,lwd=1)+geom_vline(xintercept = 2,colour="#7fcdbb",lty=2,lwd=1)+geom_vline(xintercept = 3,colour="#2c7fb8",lty=2,lwd=1)
ggplot(dt, aes(x=x, y=y))+geom_line(data = Inf.Measure, aes(x=x, y=y),lwd=0.9,lty=1)+
theme_minimal()+theme(
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(0.8,"cm"),
legend.title = element_text(size=17, face = "bold"),
legend.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.title = element_text(size=20),
axis.text.y = element_text(size=16),
text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_brewer(palette = "Dark2")+geom_vline(xintercept = 1,colour="#fec44f",lty=2,lwd=1)+geom_vline(xintercept = 2,colour="#7fcdbb",lty=2,lwd=1)+geom_vline(xintercept = 3,colour="#2c7fb8",lty=2,lwd=1)
###############################################################################################################
# Pathogens and their viral characteristics ----
InfMeas.SynthPath<-function(t){
t.ret<-NULL
for (i in 1:length(t)){
if (t[i] <=2){
t.ret<-c(t.ret,(0.25*t[i]))
}else{
t.ret<-c(t.ret,(-0.25*t[i]+1))
}
}
return(t.ret)
}
time.points<-seq(0,4,0.1)
#ip.covid19<-dlnorm(time.points,meanlog = log(5.2),sdlog = log(1.7))
#ip.fluA<-dlnorm(time.points,meanlog = log(1.4),sdlog = log(1.51))
#ip.rsv<-dlnorm(time.points,meanlog = log(4.4),sdlog = log(1.24))
infM<-InfMeas.SynthPath(time.points)
#Inc.Periods<-data.frame(x=rep(time.points,2),y=c(ip.covid19,ip.fluA), Disease=c(rep("COVID-19",length(time.points)),rep("FLU-A",length(time.points))), Quantity=rep("IncubationPeriod",length(time.points)*2) )
Inf.Measure<-data.frame(x=time.points,y=infM , Quantity=rep("InfectiousnessMeasure",length(time.points)))
dt<-data.frame(x=Inf.Measure$x, y=Inf.Measure$y, Quantity=c(as.character(Inf.Measure$Quantity)))
pt<-data.frame(x=c(0,0), y=c(0,0), Quantity=c("InfectiousnessMeasure"))
ggplot(dt, aes(x=x, y=y))+geom_line(data = Inf.Measure, aes(x=x, y=y),lwd=0.9,lty=1)+
theme_minimal()+theme(
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(0.8,"cm"),
legend.title = element_text(size=17, face = "bold"),
legend.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.title = element_text(size=20),
axis.text.y = element_text(size=16),
text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_brewer(palette = "Dark2")+geom_vline(xintercept = 1,colour="#fec44f",lty=2,lwd=1)+geom_vline(xintercept = 2,colour="#7fcdbb",lty=2,lwd=1)+geom_vline(xintercept = 3,colour="#2c7fb8",lty=2,lwd=1)
ggplot(dt, aes(x=x, y=y))+geom_line(data = Inf.Measure, aes(x=x, y=y),lwd=0.7,lty=1)+
theme_minimal()+theme(
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(0.8,"cm"),
legend.title = element_text(size=17, face = "bold"),
legend.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.title = element_text(size=20),
axis.text.y = element_text(size=16),
text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_brewer(palette = "Dark2")+geom_vline(xintercept = 1,colour="#fec44f",lty=2,lwd=1)+geom_vline(xintercept = 2,colour="#7fcdbb",lty=2,lwd=1)+geom_vline(xintercept = 3,colour="#2c7fb8",lty=2,lwd=1)
ggplot(dt, aes(x=x, y=y))+geom_line(data = Inf.Measure, aes(x=x, y=y),lwd=0.7,lty=1)+
theme_minimal()+theme(
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(0.8,"cm"),
legend.title = element_text(size=17, face = "bold"),
legend.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.title = element_text(size=20),
axis.text.y = element_text(size=16),
text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_brewer(palette = "Dark2")+geom_vline(xintercept = 1,colour="#fec44f",lty=2,lwd=1.1)+geom_vline(xintercept = 2,colour="#7fcdbb",lty=2,lwd=1)+geom_vline(xintercept = 3,colour="#2c7fb8",lty=2,lwd=1)
a1<-ggplot(dt, aes(x=x, y=y))+geom_line(data = Inf.Measure, aes(x=x, y=y),lwd=0.7,lty=1)+
theme_minimal()+theme(
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(0.8,"cm"),
legend.title = element_text(size=17, face = "bold"),
legend.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.title = element_text(size=20),
axis.text.y = element_text(size=16),
text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_brewer(palette = "Dark2")+geom_vline(xintercept = 1,colour="#fec44f",lty=2,lwd=1.1)+geom_vline(xintercept = 2,colour="#7fcdbb",lty=2,lwd=1)+geom_vline(xintercept = 3,colour="#2c7fb8",lty=2,lwd=1)
time.points<-seq(0,13,0.1)
#ip.covid19<-dlnorm(time.points,meanlog = log(5.2),sdlog = log(1.7))
#ip.fluA<-dlnorm(time.points,meanlog = log(1.4),sdlog = log(1.51))
#ip.rsv<-dlnorm(time.points,meanlog = log(4.4),sdlog = log(1.24))
inf.covid19<-dgamma(time.points,shape = 12, rate = 2.08)/ (pgamma(15,shape = 2,rate = 2.08))
inf.fluA<-dgamma(time.points,shape = 3.5, rate = 1.15)/ (pgamma(6.24,shape = 3.5,rate = 1.15))
#Inc.Periods<-data.frame(x=rep(time.points,2),y=c(ip.covid19,ip.fluA), Disease=c(rep("COVID-19",length(time.points)),rep("FLU-A",length(time.points))), Quantity=rep("IncubationPeriod",length(time.points)*2) )
Inf.Measure<-data.frame(x=rep(time.points,2),y=c(inf.covid19,inf.fluA) , Disease=c(rep("COVID-19",length(time.points)),rep("FLU-A",length(time.points))), Quantity=rep("InfectiousnessMeasure",length(time.points)*2))
dt<-data.frame(x=Inf.Measure$x, y=Inf.Measure$y,Disease=c(as.character(Inf.Measure$Disease)), Quantity=c(as.character(Inf.Measure$Quantity)))
pt<-data.frame(x=c(0,0), y=c(0,0), Quantity=c("InfectiousnessMeasure"))
ggplot(dt, aes(x=x, y=y))+geom_line(data = Inf.Measure, aes(x=x, y=y, col=Disease),lwd=1.3,lty=1)+
theme_minimal()+theme(
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(0.8,"cm"),
legend.title = element_text(size=17, face = "bold"),
legend.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.title = element_text(size=20),
axis.text.y = element_text(size=16),
text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_brewer(palette = "Dark2")+geom_vline(xintercept = 11/2.08,colour="#1b9e77",lty=2,lwd=0.8)+geom_vline(xintercept = (2.5/1.15+1),colour="#d95f02",lty=2,lwd=0.8)
a2<-ggplot(dt, aes(x=x, y=y))+geom_line(data = Inf.Measure, aes(x=x, y=y, col=Disease),lwd=1.3,lty=1)+
theme_minimal()+theme(
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(0.8,"cm"),
legend.title = element_text(size=17, face = "bold"),
legend.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.title = element_text(size=20),
axis.text.y = element_text(size=16),
text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_brewer(palette = "Dark2")+geom_vline(xintercept = 11/2.08,colour="#1b9e77",lty=2,lwd=0.8)+geom_vline(xintercept = (2.5/1.15+1),colour="#d95f02",lty=2,lwd=0.8)
library(ggpubr)
ggarrange(a1,a2, labels = c("A","B"))
ggarrange(a1,a2, labels = c("A","B"), nrow = 2)
plot(a1)
plot(a2)
440/66
465/66
519/66
y<-seq(0,1,0.01)
plot
plot(y,y^2)
plot(y,y^2-log(y))
990+990+330
4020,09
4020.09+628.59+1692.74
setwd("~/Documents/Work/PhD/Co-infection/Multi-phatogen")
