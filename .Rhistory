temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("13",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUBC10/2/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t250_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("26",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("26",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUBC10/3/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t275_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("39",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("39",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
dt.Prev<-data.frame("Prevalence"=temp.prev,"Days"=temp.time,"IntroductionTime"=temp.t2, "Pathogen"=temp.path, "TempC"=temp.nc)
dt.Prev$Pathogen<-factor(dt.Prev$Pathogen, levels = c("Path1","Path2"))
dt.Prev$IntroductionTime<-factor(dt.Prev$IntroductionTime, levels = c("0","13","26","39"))
dt.1<-dt.Prev[which(dt.Prev$TempC==1),]
dt.2<-dt.Prev[which(dt.Prev$TempC==2),]
dt.3<-dt.Prev[which(dt.Prev$TempC==3),]
dt.4<-dt.Prev[which(dt.Prev$TempC==4),]
dt.5<-dt.Prev[which(dt.Prev$TempC==5),]
dt.6<-dt.Prev[which(dt.Prev$TempC==6),]
dt.7<-dt.Prev[which(dt.Prev$TempC==7),]
dt.8<-dt.Prev[which(dt.Prev$TempC==8),]
dt.9<-dt.Prev[which(dt.Prev$TempC==9),]
dt.10<-dt.Prev[which(dt.Prev$TempC==10),]
library(dplyr)
vl.dt<-data.frame(IntroductionTime=c("0","13","26","39"),z=c(0,25,50,75))
aa2<-ggplot(data = dt.Prev, aes(x=Days,y=Prevalence/2500, col=Pathogen))+geom_line(data=dt.1)+geom_line(data = dt.2)+geom_line(data = dt.3)+geom_line(data = dt.4)+geom_line(data = dt.5)+geom_line(data = dt.6)+geom_line(data = dt.7)+geom_line(data = dt.8)+geom_line(data = dt.9)+geom_line(data = dt.10)+scale_color_manual(values = c("#56B4E9","#E69F00"),labels=c("COVID-19","FLU"))+geom_vline(aes(xintercept=z),vl.dt, lty=2)+ theme(
panel.background = element_rect(fill = "white",
colour = "grey",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=11),
legend.position = "top",
legend.title = element_text(size=12, face = "bold"),
axis.text.x = element_text(size=11, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=12),
axis.text.y = element_text(size=11),
strip.text = element_text(size = 12)
)+ylab(("Prevalence"))+xlab("Days")+labs(colour="Disease")+facet_grid(~IntroductionTime,  scales = "fixed", labeller = labeller(IntroductionTime=c("0"="Beginning","13"="Ascending","26"="Peak","39"="Descending")))
dt.Peak<-data.frame("PeakCases"=temp.pk,"IntroductionTime"=temp.t2.pk, "Pathogen"=temp.path.pk)
dt.Peak$Pathogen<-factor(dt.Peak$Pathogen, levels = c("Path1","Path2"))
dt.Peak$IntroductionTime<-factor(dt.Peak$IntroductionTime, levels = c("0","13","26","39"))
aa3<-ggplot(data = dt.Peak, aes(x=IntroductionTime,y=PeakCases/2500, fill=Pathogen))+geom_violin()+scale_fill_manual(values = c("#56B4E9","#E69F00"),labels=c("COVID-19","FLU"))+stat_summary(fun.y=mean, geom="point", shape=15, size=3, color="black", fill="black", aes(group=Pathogen),position=position_dodge(.9))+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=11),
legend.position = "top",
legend.title = element_text(size=12, face = "bold"),
axis.text.x = element_text(size=11, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=12),
axis.text.y = element_text(size=11),
strip.text = element_text(size = 12)
)+ylab(("Cases at Peak"))+xlab("Introduction time (FLU) - Epidemic progression (COVID-19)")+scale_x_discrete(labels=c("Beginning","Ascending " ,"Peak", "Descending"))+labs(fill="Disease")
plot(aa10)
plot(aa2)
plot(aa3)
ggarrange(aa2,
ggarrange(aa10,aa3,ncol = 2,labels = c("B","C"),common.legend = TRUE),
nrow=2,
labels = "A",
heights = c(1,1.2))
# FLU-COVID - Compliance: COVID 1, FLU 0 - Baseline 2 ----
temp.path<-NULL
temp.bc<-NULL
temp.t2<-NULL
temp.fs<-NULL
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUBC10/0/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t20_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("0",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("0",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUBC10/1/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t225_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("1",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("13",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUBC10/2/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t250_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("1",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("26",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUBC10/3/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t275_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("1",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("39",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
dt.FigCF10<-data.frame("FinalSize"=temp.fs,"Pathogen"=temp.path,"IntroductionTime"=temp.t2, "Compliance"=temp.bc)
dt.FigCF10$Pathogen<-factor(dt.FigCF10$Pathogen, levels = c("Path1","Path2"))
dt.FigCF10$IntroductionTime<-factor(dt.FigCF10$IntroductionTime, levels = c("0","13","26","39"))
aa10<-ggplot(data = dt.FigCF10, aes(x=IntroductionTime, fill=Pathogen,y=FinalSize/2500))+geom_violin()+scale_fill_manual(values = c("#56B4E9","#E69F00"), labels=c("COVID-19","FLU"))+stat_summary(fun.y=mean, geom="point", shape=15, size=3, color="black", fill="black", aes(group=Pathogen),position=position_dodge(.9)) +theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=9),
legend.position = "top",
legend.title = element_text(size=10, face = "bold"),
axis.text.x = element_text(size=9, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=11),
axis.text.y = element_text(size=9),
strip.text = element_text(size = 10)
)+ylab(("Attack Rate"))+xlab("Introduction Time (influenza) - Epidemic progression (COVID-19)")+scale_x_discrete(labels=c("Beginning","Ascending ","Peak","Descending"))+labs(fill="Disease")
# FLU-COVID - Prevalence curves over time
temp.path<-NULL
temp.path.pk<-NULL
temp.t2<-NULL
temp.t2.pk<-NULL
temp.prev<-NULL
temp.time<-NULL
temp.nc<-NULL
ncurves<-10
a<-1:(8*ncurves)
a<-as.character(a)
set.seed(123)
temp.pk<-NULL
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUBC10/0/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t20_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("0",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("0",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUBC10/1/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t225_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("13",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("13",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUBC10/2/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t250_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("26",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("26",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUBC10/3/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t275_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("39",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("39",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
dt.Prev<-data.frame("Prevalence"=temp.prev,"Days"=temp.time,"IntroductionTime"=temp.t2, "Pathogen"=temp.path, "TempC"=temp.nc)
dt.Prev$Pathogen<-factor(dt.Prev$Pathogen, levels = c("Path1","Path2"))
dt.Prev$IntroductionTime<-factor(dt.Prev$IntroductionTime, levels = c("0","13","26","39"))
dt.1<-dt.Prev[which(dt.Prev$TempC==1),]
dt.2<-dt.Prev[which(dt.Prev$TempC==2),]
dt.3<-dt.Prev[which(dt.Prev$TempC==3),]
dt.4<-dt.Prev[which(dt.Prev$TempC==4),]
dt.5<-dt.Prev[which(dt.Prev$TempC==5),]
dt.6<-dt.Prev[which(dt.Prev$TempC==6),]
dt.7<-dt.Prev[which(dt.Prev$TempC==7),]
dt.8<-dt.Prev[which(dt.Prev$TempC==8),]
dt.9<-dt.Prev[which(dt.Prev$TempC==9),]
dt.10<-dt.Prev[which(dt.Prev$TempC==10),]
library(dplyr)
vl.dt<-data.frame(IntroductionTime=c("0","13","26","39"),z=c(0,25,50,75))
aa2<-ggplot(data = dt.Prev, aes(x=Days,y=Prevalence/2500, col=Pathogen))+geom_line(data=dt.1)+geom_line(data = dt.2)+geom_line(data = dt.3)+geom_line(data = dt.4)+geom_line(data = dt.5)+geom_line(data = dt.6)+geom_line(data = dt.7)+geom_line(data = dt.8)+geom_line(data = dt.9)+geom_line(data = dt.10)+scale_color_manual(values = c("#56B4E9","#E69F00"),labels=c("COVID-19","FLU"))+geom_vline(aes(xintercept=z),vl.dt, lty=2)+ theme(
panel.background = element_rect(fill = "white",
colour = "grey",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=9),
legend.position = "top",
legend.title = element_text(size=10, face = "bold"),
axis.text.x = element_text(size=9, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=10),
axis.text.y = element_text(size=9),
strip.text = element_text(size = 10)
)+ylab(("Prevalence"))+xlab("Days")+labs(colour="Disease")+facet_grid(~IntroductionTime,  scales = "fixed", labeller = labeller(IntroductionTime=c("0"="Beginning","13"="Ascending","26"="Peak","39"="Descending")))
dt.Peak<-data.frame("PeakCases"=temp.pk,"IntroductionTime"=temp.t2.pk, "Pathogen"=temp.path.pk)
dt.Peak$Pathogen<-factor(dt.Peak$Pathogen, levels = c("Path1","Path2"))
dt.Peak$IntroductionTime<-factor(dt.Peak$IntroductionTime, levels = c("0","13","26","39"))
aa3<-ggplot(data = dt.Peak, aes(x=IntroductionTime,y=PeakCases/2500, fill=Pathogen))+geom_violin()+scale_fill_manual(values = c("#56B4E9","#E69F00"),labels=c("COVID-19","FLU"))+stat_summary(fun.y=mean, geom="point", shape=15, size=3, color="black", fill="black", aes(group=Pathogen),position=position_dodge(.9))+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=9),
legend.position = "top",
legend.title = element_text(size=10, face = "bold"),
axis.text.x = element_text(size=9, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=10),
axis.text.y = element_text(size=9),
strip.text = element_text(size = 10)
)+ylab(("Cases at Peak"))+xlab("Introduction time (FLU) - Epidemic progression (COVID-19)")+scale_x_discrete(labels=c("Beginning","Ascending " ,"Peak", "Descending"))+labs(fill="Disease")
plot(aa10)
plot(aa2)
plot(aa3)
ggarrange(aa2,
ggarrange(aa10,aa3,ncol = 2,labels = c("B","C"),common.legend = TRUE),
nrow=2,
labels = "A",
heights = c(1,1.2))
# FLU-COVID - Compliance: COVID 1, FLU 0 + HI ----
temp.path<-NULL
temp.bc<-NULL
temp.t2<-NULL
temp.fs<-NULL
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUHIBC1/4/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t20_sigma12_0_sigma21_0_alpha10.5_alpha20.33_rho10.69_rho20.67_lli10.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("0",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("0",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUHIBC1/10/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t225_sigma12_0_sigma21_0_alpha10.5_alpha20.33_rho10.69_rho20.67_lli10.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("1",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("13",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUHIBC1/16/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t250_sigma12_0_sigma21_0_alpha10.5_alpha20.33_rho10.69_rho20.67_lli10.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("1",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("26",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUHIBC1/22/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t275_sigma12_0_sigma21_0_alpha10.5_alpha20.33_rho10.69_rho20.67_lli10.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("1",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("39",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
dt.FigCF10<-data.frame("FinalSize"=temp.fs,"Pathogen"=temp.path,"IntroductionTime"=temp.t2, "Compliance"=temp.bc)
dt.FigCF10$Pathogen<-factor(dt.FigCF10$Pathogen, levels = c("Path1","Path2"))
dt.FigCF10$IntroductionTime<-factor(dt.FigCF10$IntroductionTime, levels = c("0","13","26","39"))
aa1035<-ggplot(data = dt.FigCF10, aes(x=IntroductionTime, fill=Pathogen,y=FinalSize/2500))+geom_violin()+scale_fill_manual(values = c("#56B4E9","#E69F00"), labels=c("COVID-19","FLU"))+stat_summary(fun.y=mean, geom="point", shape=15, size=3, color="black", fill="black", aes(group=Pathogen),position=position_dodge(.9)) +theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=9),
legend.position = "top",
legend.title = element_text(size=10, face = "bold"),
axis.text.x = element_text(size=9, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=10),
axis.text.y = element_text(size=9),
strip.text = element_text(size = 10)
)+ylab(("Attack Rate"))+xlab("Introduction Time (FLU) - Epidemic progression (COVID-19)")+scale_x_discrete(labels=c("Beginning","Ascending ","Peak","Descending"))+labs(fill="Disease")
# FLU-COVID - Prevalence curves over time
temp.path<-NULL
temp.path.pk<-NULL
temp.t2<-NULL
temp.t2.pk<-NULL
temp.prev<-NULL
temp.time<-NULL
temp.nc<-NULL
ncurves<-10
a<-1:(8*ncurves)
a<-as.character(a)
set.seed(123)
temp.pk<-NULL
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUHIBC1/4/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t20_sigma12_0_sigma21_0_alpha10.5_alpha20.33_rho10.69_rho20.67_lli10.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("0",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("0",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUHIBC1/10/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t225_sigma12_0_sigma21_0_alpha10.5_alpha20.33_rho10.69_rho20.67_lli10.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("13",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("13",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUHIBC1/16/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t250_sigma12_0_sigma21_0_alpha10.5_alpha20.33_rho10.69_rho20.67_lli10.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("26",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("26",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/COVFLUHIBC1/22/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg1_t275_sigma12_0_sigma21_0_alpha10.5_alpha20.33_rho10.69_rho20.67_lli10.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("39",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("39",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
dt.Prev<-data.frame("Prevalence"=temp.prev,"Days"=temp.time,"IntroductionTime"=temp.t2, "Pathogen"=temp.path, "TempC"=temp.nc)
dt.Prev$Pathogen<-factor(dt.Prev$Pathogen, levels = c("Path1","Path2"))
dt.Prev$IntroductionTime<-factor(dt.Prev$IntroductionTime, levels = c("0","13","26","39"))
dt.1<-dt.Prev[which(dt.Prev$TempC==1),]
dt.2<-dt.Prev[which(dt.Prev$TempC==2),]
dt.3<-dt.Prev[which(dt.Prev$TempC==3),]
dt.4<-dt.Prev[which(dt.Prev$TempC==4),]
dt.5<-dt.Prev[which(dt.Prev$TempC==5),]
dt.6<-dt.Prev[which(dt.Prev$TempC==6),]
dt.7<-dt.Prev[which(dt.Prev$TempC==7),]
dt.8<-dt.Prev[which(dt.Prev$TempC==8),]
dt.9<-dt.Prev[which(dt.Prev$TempC==9),]
dt.10<-dt.Prev[which(dt.Prev$TempC==10),]
library(dplyr)
vl.dt<-data.frame(IntroductionTime=c("0","13","26","39"),z=c(0,25,50,75))
aa2<-ggplot(data = dt.Prev, aes(x=Days,y=Prevalence/2500, col=Pathogen))+geom_line(data=dt.1)+geom_line(data = dt.2)+geom_line(data = dt.3)+geom_line(data = dt.4)+geom_line(data = dt.5)+geom_line(data = dt.6)+geom_line(data = dt.7)+geom_line(data = dt.8)+geom_line(data = dt.9)+geom_line(data = dt.10)+scale_color_manual(values = c("#56B4E9","#E69F00"),labels=c("COVID-19","FLU"))+geom_vline(aes(xintercept=z),vl.dt, lty=2)+ theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "white"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=9),
legend.position = "top",
legend.title = element_text(size=10, face = "bold"),
axis.text.x = element_text(size=9, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=10),
axis.text.y = element_text(size=9),
strip.text = element_text(size = 10)
)+ylab(("Prevalence"))+xlab("Days")+labs(colour="Disease")+facet_grid(~IntroductionTime,  scales = "fixed", labeller = labeller(IntroductionTime=c("0"="Beginning","13"="Ascending","26"="Peak","39"="Descending")))
dt.Peak<-data.frame("PeakCases"=temp.pk,"IntroductionTime"=temp.t2.pk, "Pathogen"=temp.path.pk)
dt.Peak$Pathogen<-factor(dt.Peak$Pathogen, levels = c("Path1","Path2"))
dt.Peak$IntroductionTime<-factor(dt.Peak$IntroductionTime, levels = c("0","13","26","39"))
aa3<-ggplot(data = dt.Peak, aes(x=IntroductionTime,y=PeakCases/2500, fill=Pathogen))+geom_violin()+scale_fill_manual(values = c("#56B4E9","#E69F00"),labels=c("COVID-19","FLU"))+stat_summary(fun.y=mean, geom="point", shape=15, size=3, color="black", fill="black", aes(group=Pathogen),position=position_dodge(.9))+theme(
panel.background = element_rect(fill = "white",
colour = "gray",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(1, "cm"),
legend.key.width = unit(1,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=9),
legend.position = "top",
legend.title = element_text(size=10, face = "bold"),
axis.text.x = element_text(size=9, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=10),
axis.text.y = element_text(size=9),
strip.text = element_text(size = 10)
)+ylab(("Cases at Peak"))+xlab("Introduction time (FLU) - Epidemic progression (COVID-19)")+scale_x_discrete(labels=c("Beginning","Ascending " ,"Peak", "Descending"))+labs(fill="Disease")
plot(aa1035)
plot(aa2)
plot(aa3)
ggarrange(aa2,
ggarrange(aa1035,aa3,ncol = 2,labels = c("E","F"),common.legend = TRUE),
nrow=2,
labels = "D",
heights = c(1,1.2))
