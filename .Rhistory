text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_manual(values=c("#FFDB6D","#00AFBB"))+geom_vline(xintercept = 11/2.08,colour="#FFDB6D",lty=2,lwd=0.8)+geom_vline(xintercept = 2,colour="#00AFBB",lty=2,lwd=0.8)+ylim(c(0,0.4))
plot(a2)
# Setting infectiousness measure according to Carrat et al. (2008) for H1N1
VL<-data.frame(x=0:8,y=c(0,1.75,3,2.5,1.8,1.25,0.75,0.5,0))
vl.flu<-nlsLM(y~a*dgamma(x=x,shape = s1,scale = sc1),start = list(a=10,s1=1.5,sc1=1.5),data = VL, weights = c(0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,20))
prms<-vl.flu$m$getPars()
print(prms)
plot(seq(0,8,0.1),prms[1]*dgamma(x=seq(0,8,0.1),shape = prms[2],scale = prms[3]),ylim = c(0,3.1))
points(VL, col="red")
f.vl<-function(t){
return(prms[1]*dgamma(t,shape = prms[2],scale = prms[3]))
}
k<-integrate(f.vl,lower = 0,upper = 8)
vl.flu<-nlsLM(y~a*dgamma(x=x,shape = s1,scale = sc1),start = list(a=10,s1=1.5,sc1=1.5),data = VL, weights = c(0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,50))
prms<-vl.flu$m$getPars()
print(prms)
plot(seq(0,8,0.1),prms[1]*dgamma(x=seq(0,8,0.1),shape = prms[2],scale = prms[3]),ylim = c(0,3.1))
points(VL, col="red")
vl.flu<-nlsLM(y~a*dgamma(x=x,shape = s1,scale = sc1),start = list(a=10,s1=1.5,sc1=1.5),data = VL, weights = c(0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,100))
prms<-vl.flu$m$getPars()
print(prms)
plot(seq(0,8,0.1),prms[1]*dgamma(x=seq(0,8,0.1),shape = prms[2],scale = prms[3]),ylim = c(0,3.1))
points(VL, col="red")
f.vl<-function(t){
return(prms[1]*dgamma(t,shape = prms[2],scale = prms[3]))
}
k<-integrate(f.vl,lower = 0,upper = 8)
prms[1]/ k$value
prms[2]
prms[3]
inf.fluA<-1.001592 *dgamma(time.points2,shape = 4.604016,scale = 0.5922317)
#Inc.Periods<-data.frame(x=rep(time.points,2),y=c(ip.covid19,ip.fluA), Disease=c(rep("COVID-19",length(time.points)),rep("FLU-A",length(time.points))), Quantity=rep("IncubationPeriod",length(time.points)*2) )
Inf.Measure<-data.frame(x=c(time.points1,time.points2),y=c(inf.covid19,inf.fluA) , Disease=c(rep("COVID-19",length(time.points1)),rep("FLU-A",length(time.points2))), Quantity=rep("InfectiousnessMeasure",length(time.points1)+length(time.points2)))
dt<-data.frame(x=Inf.Measure$x, y=Inf.Measure$y,Disease=c(as.character(Inf.Measure$Disease)), Quantity=c(as.character(Inf.Measure$Quantity)))
pt<-data.frame(x=c(0,0), y=c(0,0), Quantity=c("InfectiousnessMeasure"))
a2<-ggplot(dt, aes(x=x, y=y))+geom_line(data = Inf.Measure, aes(x=x, y=y, col=Disease),lwd=1.3,lty=1)+
theme_minimal()+theme(
legend.key.size = unit(0.8, "cm"),
legend.key.width = unit(0.8,"cm"),
legend.title = element_text(size=17, face = "bold"),
legend.text = element_text(size=16),
axis.text.x = element_text(size=16),
axis.title = element_text(size=20),
axis.text.y = element_text(size=16),
text = element_text(size=20, face = "bold"),
) + xlab("Days")+ylab("Infectiousness Measure")+scale_color_manual(values=c("#FFDB6D","#00AFBB"))+geom_vline(xintercept = 11/2.08,colour="#FFDB6D",lty=2,lwd=0.8)+geom_vline(xintercept = 2,colour="#00AFBB",lty=2,lwd=0.8)+ylim(c(0,0.4))
plot(a2)
ggarrange(a1,a2, labels = c("A","B"), nrow = 2)
prms[1]/ k$value
prms[2]
prms[3]
LLImmlev.basic<-function(status.matrix.v2,infectee,lli,current.time,typeIC,t.imm.lim){ #pathogen.v1 is the infection the infectee might catch
value<-1
if (status.matrix.v2$infected[infectee]==-1){
t.sinc.inf<-current.time-status.matrix.v2$time.of.infection[infectee]
if (t.sinc.inf<t.imm.lim){
if (typeIC==1){
value<-lli
}
if (typeIC==2){
value<-1-(t.sinc.inf/t.imm.lim)
}
if (typeIC==3){
value<-0.75-(t.sinc.inf/(2*t.imm.lim))
}
}
value<-lli
}
return(value)
}
t.sinc.inf<-current.time-status.matrix.v2$time.of.infection[infectee]
if (t.sinc.inf<t.imm.lim){
if (typeIC==1){
value<-lli
}
if (typeIC==2){
value<-1-(t.sinc.inf/t.imm.lim)
}
if (typeIC==3){
value<-0.75-(t.sinc.inf/(2*t.imm.lim))
}
}
s<-function(t){
return(1.001592*dgamma(t,shape = 4.604016,scale = 0.5922317))
}
integrate(s,lower = 0,upper = 2)
matrix(c(1,1,0,0,1,0,1,0,1,0,0,1,1,0,0,1))
a<-matrix(c(1,1,0,0,1,0,1,0,1,0,0,1,1,0,0,1), nrow = 4)
a
a<-matrix(c(1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0), nrow = 4)
a
eigen(a)
eigen(a)[1]
a*1/6
eigen(a*1/6)[1]
eigen(a*1/6)[[1]]
eigen(a*1/6)1/6
1/6
eigen(a*5/6)
Re(eigen(a*5/6)$values[1])
a
1*1/6
Re(eigen(a*5/6)$values[1])
Re(eigen(a*3/4)$values[1])
a
a<-matrix(c(1,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1), nrow = 4)
Re(eigen(a*5/6)$values[1])
a
Re(eigen(a*5/6)$values[1])
a*5/6
eigen(a*5/6)$values[1]
t<-seq(0,100,0.1)
a<-2
plot(t, t*exp(-t))
t<-seq(0,10,0.1)
plot(t, t*exp(-t))
t<-seq(0,30,0.1)
j<-function(t){
return(1-t/30)
}
plot(t,j(t))
j<-function(t){
return(t/30)
}
plot(t,j(t))
j<-function(t){
return(t/2*30)
}
plot(t,j(t))
j<-function(t){
return(t/60)
}
plot(t,j(t))
j<-function(t){
return(0.25+t/60)
}
plot(t,j(t))
j<-function(t){
return(0.25+t/120)
}
plot(t,j(t))
library(Lahman)
install.packages("Lahman")
library(Lahman)
library(tidyverse)
install.packages("tidyverse")
install.packages("dslabs")
library(Lahman)
library(tidyverse)
library(dslabs)
ds_theme_set()
Teams %>% filter(yearID %in% 1961:2001) %>%
mutate(HR_per_game = HR / G, R_per_game = R / G) %>%
ggplot(aes(HR_per_game, R_per_game)) +
geom_point(alpha = 0.5)
Teams
Teams %>% filter(yearID %in% 1961:2001) %>%
mutate(SB_per_game = SB / G, R_per_game = R / G) %>%
ggplot(aes(SB_per_game, R_per_game)) +
geom_point(alpha = 0.5)
Teams %>% filter(yearID %in% 1961:2001) %>%
mutate(BB_per_game = BB / G, R_per_game = R / G) %>%
ggplot(aes(BB_per_game, R_per_game)) +
geom_point(alpha = 0.5)
Teams$SOA
Teams %>% filter(yearID %in% 1961:2001) %>%
mutate(R_per_game = R / G, AB_per_game = AB / G) %>%
ggplot(aes(R_per_game, AB_per_game)) +
geom_point(alpha = 0.5)
Teams %>% filter(yearID %in% 1961:2001) %>%
mutate(W_per_game = W / G, E_per_game = E / G) %>%
ggplot(aes(W_per_game, E_per_game)) +
geom_point(alpha = 0.5)
Teams %>% filter(yearID %in% 1961:2001) %>%
mutate(T_per_game = X3B / G, D_per_game = X2B / G) %>%
ggplot(aes(T_per_game, D_per_game)) +
geom_point(alpha = 0.5)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims_CVFL/TESTCF0/0/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed0_PImm0_tSeed1000_bc10_bc20.RData")
m<-NULL
for (i in 1:100){
m<-c(m,mean(epi.outbreak[[1]]$FinalSize$FinalSize1))
m2<-NULL
for (i in 1:100){
m<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize1))
m2<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize2))
}
m2<-NULL
m<-NULL
for (i in 1:100){
m<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize1))
m2<-c(m2,mean(epi.outbreak[[i]]$FinalSize$FinalSize2))
}
box(m,m2)
boxplot(m,m2)
mean(m2)
mean(m2)/2500
mean(m1)/2500
mean(m)/2500
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims_CVFL/TESTCF0/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc20.RData")
m2<-NULL
m<-NULL
for (i in 1:100){
m2<-c(m2,mean(epi.outbreak[[i]]$FinalSize$FinalSize2))
m<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize1))
}
mean(m)/2500
mean(m2)/2500
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims_CVFL/TESTCF0/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc20.RData")
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims_CVFL/TESTCF0/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc20.RData")
m<-NULL
m2<-NULL
for (i in 1:100){
m<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize1))
m2<-c(m2,mean(epi.outbreak[[i]]$FinalSize$FinalSize2))
}
mean(m2)/2500
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims_CVFL/COVFLUBC025/1/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg8.27_t213_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed0_PImm0_tSeed1000_bc11_bc20.RData")
m<-NULL
m2<-NULL
for (i in 1:100){
m2<-c(m2,mean(epi.outbreak[[i]]$FinalSize$FinalSize2))
m<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize1))
}
mean(m)
mean(m2)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims_CVFL/TESTCF05/0/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed0_PImm0_tSeed1000_bc10.5_bc20.5.RData")
m<-NULL
m2<-NULL
for (i in 1:100){
m<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize1))
m2<-c(m2,mean(epi.outbreak[[i]]$FinalSize$FinalSize2))
}
boxplot(m,m2)
mean(m)
mean(m)/2500
mean(m2)/2500
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims_CVFL/TESTCF05/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10.5_bc20.5.RData")
m<-NULL
m2<-NULL
for (i in 1:100){
mean(m)
for (i in 1:100){
m<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize1))
m2<-c(m2,mean(epi.outbreak[[i]]$FinalSize$FinalSize2))
}
mean(m2)/2500
mean(m)/2500
boxplot(m2,m1)
boxplot(m2,m)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims_CVFL/TESTCF05/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10.5_bc20.5.RData")
m2<-NULL
m<-NULL
for (i in 1:100){
m2<-c(m2,mean(epi.outbreak[[i]]$FinalSize$FinalSize2))
m<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize1))
}
mean(m)/2500
mean(m2)/2500
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims_CVFL/TESTCF05/0/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed0_PImm0_tSeed1000_bc10.5_bc20.5.RData")
m<-NULL
m2<-NULL
for (i in 1:100){
m<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize1))
m2<-c(m2,mean(epi.outbreak[[i]]$FinalSize$FinalSize2))
}
mean(m2)/2500
mean(m1)/2500
mean(m)/2500
boxplot(m,m2)
mean(m[which(m>250)])
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims_CVFL/TESTCF05/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10.5_bc20.5.RData")
m<-NULL
m2<-NULL
for (i in 1:100){
m<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize1))
m2<-c(m2,mean(epi.outbreak[[i]]$FinalSize$FinalSize2))
}
mean(m[which(m>250)])
mean(m[which(m2>250)])
mean(m2[which(m2>250)])
mean(m2[which(m2>250)])/2500
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims_CVFL/TESTCF05/0/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed0_PImm0_tSeed1000_bc10.5_bc20.5.RData")
m<-NULL
m2<-NULL
for (i in 1:100){
m2<-c(m2,mean(epi.outbreak[[i]]$FinalSize$FinalSize2))
m<-c(m,mean(epi.outbreak[[i]]$FinalSize$FinalSize1))
}
mean(m2[which(m2>250)])/2500
mean(m1[which(m1>250)])/2500
mean(m[which(m>250)])/2500
m
mean(m)
600/250
600/2500
dbinom(2,2,0.5)
dbinom(2,2,0.5)
dbinom(2,1,0.5)
dbinom(1,2,0.5)
dbinom(1,2,0.5)
dbinom(1,2,0.25)
0.25*2*0.75
a<-3
v<-c(5,90,0.1)
mean(a,v)
mean(c(a,v))
mean(a,mean(v))
ba<-.5
pa<-.8
(ba+ (2*ba*dbinom(2,2,pa)+2*dbinom(0,2,pa)+(ba+1)*dbinom(1,2,pa))/3)
(ba+(ba*pa+(1-pa))/2)
mean(2,3)
mean(c(2,3))
(mean(mean(c(ba,ba*pa)),mean(c(ba,1-pa))))
pa
ba
pa<-0.5
(mean(mean(c(ba,ba*pa)),mean(c(ba,1-pa))))
0.5*2
0.5^2
mean(c(0.5^2*0.5,0.5*0.5))
mean(c(0.5^2*0.5,0.5*0.5 )
)
mean( mean(0.5,0.5*0.5),mean(0.5,0.5) )
ba
pa
(mean(mean(c(ba,ba*pa)),mean(c(ba,1-pa))))
mean( mean(0.5,0.5*0.5),mean(0.5,0.5) )
mean( mean(c(0.5,0.5*0.5)),mean(c(0.5,0.5)) )
(mean(mean(c(ba,2*ba*dbinom(0,2,pa))),mean(c(ba,(ba+1)*dbinom(1,2,pa))),mean(c(ba,2*dbinom(1,2,pa)))))
pa<-0.8
ba<-1
(mean(mean(c(ba,2*ba*dbinom(0,2,pa))),mean(c(ba,(ba+1)*dbinom(1,2,pa))),mean(c(ba,2*dbinom(1,2,pa)))))
(mean(mean(c(ba,ba*pa)),mean(c(ba,1-pa))))
pa<-1
pa<-1
(mean(mean(c(ba,ba*pa)),mean(c(ba,1-pa))))
(mean(mean(c(ba,2*ba*dbinom(0,2,pa))),mean(c(ba,(ba+1)*dbinom(1,2,pa))),mean(c(ba,2*dbinom(1,2,pa)))))
(mean(mean(c(ba,2*ba*dbinom(0,2,pa))),mean(c(ba,(ba+1)*dbinom(1,2,pa))),mean(c(ba,(ba+1)*dbinom(1,2,pa))),mean(c(ba,2*dbinom(1,2,pa)))))
ba
2*ba*dbinom(0,2,pa)
2*ba*dbinom(0,2,pa))
2*ba*dbinom(0,2,pa)
(mean(mean(c(ba,ba))*pa,mean(c(ba,1))*(1-pa)))
pa
ba
ba<-0.5
(mean(mean(c(ba,ba))*pa,mean(c(ba,1))*(1-pa)))
ba
pa
(mean(mean(c(ba,ba))*pa,mean(c(ba,1))*(1-pa)))
(mean(mean(c(ba,ba))*pa,mean(c(ba,1))*(1-pa)))
(mean(c(ba,ba))*pa
)
mean(c(ba,ba))*pa
c(ba,1))*(1-pa))
c(ba,1))*(1-pa)
mean(c(ba,1))*(1-pa)
mean(c(0.5,0))
2*mb*dbinom(2,2,cp)+(mb+1)*dbinom(1,2,cp)+2*dbinom(0,2,cp)
mb<-1
cp<1
cp<-1
2*mb*dbinom(2,2,cp)+(mb+1)*dbinom(1,2,cp)+2*dbinom(0,2,cp)
mb<-0.3
2*mb*dbinom(2,2,cp)+(mb+1)*dbinom(1,2,cp)+2*dbinom(0,2,cp)
2*0.3
cp<-0
2*mb*dbinom(2,2,cp)+(mb+1)*dbinom(1,2,cp)+2*dbinom(0,2,cp)
1-c)+c*mb
(1-c)+c*mb
(1-cp)+cp*mb
cp
mb
cp<-0.5
(1-cp)+cp*mb
0.5+0.5*0.3
dmultinom(c(2,1),prob = c(0.3,0.7))
dbinom(2,3,prob = 0.3)
size<-10
q.h<-0
hh.data<-data.frame("members"= 1:size,"id"=1:size,"status"=0,"recovery"=Inf, "index.contact"=0, "betah"=(size-1)*q.h, "SO"=Inf, "ToI"=Inf, "Type"=0)
d<-c(1,1,1,1)
e<-c(2,3,4,5)
d*e
load("~/Desktop/SimT/TESTCF0/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc20.RData")
temp.fs<-NULL
temp.fs2<-NULL
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1)
temp.fs2<-c(temp.fs2,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
boxplot(temp.fs,temp.fs2)
mean(temp.fs2)/2500
load("~/Desktop/SimT/TESTCF0/0/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed0_PImm0_tSeed1000_bc10_bc20.RData")
temp.fs<-NULL
temp.fs2<-NULL
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1)
temp.fs2<-c(temp.fs2,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
boxplot(temp.fs,temp.fs2)
boxplot(temp.fs,temp.fs2)/2500
boxplot(temp.fs/2500,temp.fs2/2500)
load("~/Desktop/SimT/TESTCF1/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc21.RData")
temp.fs<-NULL
temp.fs2<-NULL
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1)
temp.fs2<-c(temp.fs2,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.fs12<-NULL
temp.fs22<-NULL
boxplot(temp.fs/2500,temp.fs2/2500)
temp.fs<-NULL
temp.fs2<-NULL
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1)
temp.fs2<-c(temp.fs2,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
load("~/Desktop/SimT/TESTCF1/0/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed0_PImm0_tSeed1000_bc11_bc21.RData")
temp.fs12<-NULL
temp.fs22<-NULL
for (i in 1:length(epi.outbreak)){
temp.fs12<-c(temp.fs12,epi.outbreak[[i]]$FinalSize$FinalSize1)
temp.fs22<-c(temp.fs22,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
boxplot(temp.fs/2500,temp.fs2/2500)
boxplot(temp.fs/2500,temp.fs2/2500,temp.fs12/2500,temp.fs22/2500)
boxplot(temp.fs/2500,temp.fs12/2500,temp.fs2/2500,temp.fs22/2500)
load("~/Desktop/SimT/TESTCF0/0/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed0_PImm0_tSeed1000_bc10_bc20.RData")
temp.fs3<-NULL
temp.fs23<-NULL
for (i in 1:length(epi.outbreak)){
temp.fs3<-c(temp.fs3,epi.outbreak[[i]]$FinalSize$FinalSize1)
temp.fs23<-c(temp.fs23,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
boxplot(temp.fs,temp.fs12,temp.fs3, temp.fs2,temp.fs22,temp.fs23)
load("~/Desktop/SimT/TESTCF05/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10.5_bc20.5.RData")
temp.fs<-NULL
temp.fs2<-NULL
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1)
temp.fs2<-c(temp.fs2,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
boxplot(temp.fs,temp.fs12,temp.fs3, temp.fs2,temp.fs22,temp.fs23)
load("~/Desktop/SimT/TESTCF1/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc21.RData")
temp.fs12<-NULL
temp.fs22<-NULL
for (i in 1:length(epi.outbreak)){
temp.fs12<-c(temp.fs12,epi.outbreak[[i]]$FinalSize$FinalSize1)
temp.fs22<-c(temp.fs22,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
boxplot(temp.fs,temp.fs12,temp.fs3, temp.fs2,temp.fs22,temp.fs23)
load("~/Desktop/SimT/TESTCF0/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_FLU-A_R11.3_R21.5_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.33_alpha20.33_rho10.67_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc20.RData")
temp.fs3<-NULL
temp.fs23<-NULL
for (i in 1:length(epi.outbreak)){
temp.fs3<-c(temp.fs3,epi.outbreak[[i]]$FinalSize$FinalSize1)
temp.fs23<-c(temp.fs23,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
boxplot(temp.fs,temp.fs12,temp.fs3, temp.fs2,temp.fs22,temp.fs23)
g<-function(t)
{
return(1.001592*dgamma(t,shape = 4.604016,scale = 0.5922317))
}
integrate(g,lower = 0,upper = 8)
integrate(g,lower = 0,upper = 2)
setwd("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Multi-phatogen")
InfMeasure<-function(t,pathogen){
if (pathogen=="COVID-19" | pathogen=="DELTA" | pathogen=="OMICRON"){
return(dgamma(t,shape = 12, rate = 2.08)/ (pgamma(15,shape = 12,rate = 2.08)))
}
if (pathogen=="FLU-A"){
# Setting infectiousness measure according to Carrat et al. (2008) for H1N1
#VL<-data.frame(x=0:8,y=c(0,1.75,3,2.5,1.8,1.25,0.75,0.5,0))
#vl.flu<-nlsLM(y~a*dgamma(x=x,shape = s1,scale = sc1),start = list(a=10,s1=1.5,sc1=1.5),data = VL, weights = c(0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,100))
#prms<-vl.flu$m$getPars()
#print(prms)
#plot(seq(0,8,0.1),prms[1]*dgamma(x=seq(0,8,0.1),shape = prms[2],scale = prms[3]),ylim = c(0,3.1))
#points(VL, col="red")
#f.vl<-function(t){
#  return(prms[1]*dgamma(t,shape = prms[2],scale = prms[3]))
#}
#k<-integrate(f.vl,lower = 0,upper = 8)
#prms[1]/ k$value
return(1.001592*dgamma(t,shape = 4.604016,scale = 0.5922317))
#return(dgamma(t,shape = 3.5, rate = 1.15)/ (pgamma(6.24,shape = 3.5,rate = 1.15)))
}
if (pathogen=="FLU-B"){
return(dgamma(t,shape = 3.5, rate = 1.15)/ (pgamma(6.24,shape = 3.5,rate = 1.15)))
}
if (pathogen=="RSV"){
return(dgamma(t,shape = 15, rate = 2.6)/ (pgamma(12,shape = 15,rate = 2.6)) )
}
if (pathogen == "XP" | pathogen == "XS" | pathogen == "XA"){
if (t <=2){
return(0.25*t)
}else{
return(-0.25*t+1)
}
}
}
t<-seq(0,15,0.1)
plot(t,InfMeasure(t,"COVID-19"))
1/8.27
0.12*11
3.3/1.3
1.3/3.3
1.5/0.5
1.5/3.3
