recovered<- n
Rt2<-comp.RT(status.matrix = status.matrix.2,individual = recovered,Rt=Rt2)
status.matrix.2$infected[recovered]<--1
status.matrix.2$Recovery[recovered]<-Inf
transmission.parameters$contact_rate_within[recovered]<-length(get.neighborhood(HH.network,recovered))
time.events<-rbind(time.events,c(current.time,-2,recovered))
if (status.matrix.1$infected[recovered]!=1){
infectives[recovered]<-0
contact.time.between$pr.ctc[recovered]<-NA
contact.time.within$pr.ctc[recovered]<-NA
index.contact.within[recovered]<-0
index.contact.between[recovered]<-0
}else{
if (homequarantine[recovered]==0){
index.contact.between[recovered]<-1
}
}
}else{
Rt1<-comp.RT(status.matrix = status.matrix.1,individual = recovered,Rt=Rt1)
status.matrix.1$infected[recovered]<--1
status.matrix.1$Recovery[recovered]<-Inf
transmission.parameters$contact_rate_within[recovered]<-length(get.neighborhood(HH.network,recovered))
time.events<-rbind(time.events,c(current.time,-1,recovered))
if (status.matrix.2$infected[recovered]!=1){
infectives[recovered]<-0
contact.time.between$pr.ctc[recovered]<-NA
contact.time.within$pr.ctc[recovered]<-NA
index.contact.within[recovered]<-0
index.contact.between[recovered]<-0
}else{
if (homequarantine[recovered]==0){
index.contact.between[recovered]<-1
}
}
}
}
if (stop.quarantine[recovered]==current.time){
homequarantine[recovered]<-0
stop.quarantine[recovered]<-Inf
}
}
}
if (next.evts=="NewPathogen"){
current.time<-events$NewPathogen
events$NewPathogen<-Inf
first.cases<-sample(1:n,nSeeds.2)
for (j in first.cases){
first<-j
status.matrix.2$infected[first] <- 1
status.matrix.2$time.of.infection[first] <- current.time
status.matrix.2$Recovery[first]<-current.time+infectious.period.length(pathogen=pathogen.2)
if (runif(1)<rho.2){ #if symptomatic
transmission.parameters$q2h[first]<-inf.path.2.h #A single q parameter for everyone
transmission.parameters$q2g[first]<-inf.path.2.g #A single q parameter for everyone
status.matrix.2$severity[first]<-1
status.matrix.2$TimeSymptomOnset[first]<-current.time+incubation.period(pathogen=pathogen.2)
if (runif(1)<bc.2){
homequarantine.day.2[first]<-status.matrix.2$TimeSymptomOnset[first]
}
time.events<-rbind(time.events,c(current.time,2.1,first))
}else{
transmission.parameters$q2h[first]<-inf.path.2.h*alpha.as.2 #A single q parameter for everyone
transmission.parameters$q2g[first]<-inf.path.2.g*alpha.as.2 #A single q parameter for everyone
status.matrix.2$severity[first]<-2
time.events<-rbind(time.events,c(current.time,2.2,first))
}
if (infectives[first]==0){
infectives[first]<-1
contact.time.within$pr.ctc[first]<-ifelse(transmission.parameters$contact_rate_within[first]!=0,rexp(1,transmission.parameters$contact_rate_within[first])+current.time,Inf)       # I generate the next interarrival time for individual i
if (homequarantine[first]==0){
contact.time.between$pr.ctc[first]<-rexp(1,transmission.parameters$contact_rate_between[first])+current.time # I generate the next interarrival time for individual i
}
}
}
}
if (next.evts=="NewSeeding1"){
current.time<-events$NewSeeding1
events$NewSeeding1<-current.time+t.seed
not.infected<-which(status.matrix.1$infected!=1)
if (nSeeds.1<length(not.infected)){
first.cases<-sample(not.infected,nSeeds.1)
for (j in first.cases){
first<-j
status.matrix.1$infected[first] <- 1
status.matrix.1$time.of.infection[first] <- current.time
status.matrix.1$Recovery[first]<-current.time+infectious.period.length(pathogen=pathogen.1)
if (runif(1)<rho.1){ #if symptomatic
transmission.parameters$q1h[first]<-inf.path.1.h #A single q parameter for everyone
transmission.parameters$q1g[first]<-inf.path.1.g #A single q parameter for everyone
status.matrix.1$severity[first]<-1
status.matrix.1$TimeSymptomOnset[first]<-current.time+incubation.period(pathogen=pathogen.2)
if (runif(1)<bc.1){
homequarantine.day.1[first]<-status.matrix.1$TimeSymptomOnset[first]
}
time.events<-rbind(time.events,c(current.time,1.1,first))
}else{
transmission.parameters$q1h[first]<-inf.path.1.h*alpha.as.1 #A single q parameter for everyone
transmission.parameters$q1g[first]<-inf.path.1.g*alpha.as.1 #A single q parameter for everyone
status.matrix.1$severity[first]<-2
time.events<-rbind(time.events,c(current.time,1.2,first))
}
if (infectives[first]==0){
infectives[first]<-1
contact.time.within$pr.ctc[first]<-ifelse(transmission.parameters$contact_rate_within[first]!=0,rexp(1,transmission.parameters$contact_rate_within[first])+current.time,Inf)       # I generate the next interarrival time for individual i
if (homequarantine[first]==0){
contact.time.between$pr.ctc[first]<-rexp(1,transmission.parameters$contact_rate_between[first])+current.time # I generate the next interarrival time for individual i
}
}
}
}
}
if (next.evts=="NewSeeding2"){
current.time<-events$NewSeeding1
events$NewSeeding2<-current.time+t.seed
not.infected<-which(status.matrix.2$infected!=1)
if (nSeeds.2<length(not.infected)){
first.cases<-sample(not.infected,nSeeds.2)
for (j in first.cases){
first<-j
status.matrix.2$infected[first] <- 1
status.matrix.2$time.of.infection[first] <- current.time
status.matrix.2$Recovery[first]<-current.time+infectious.period.length(pathogen=pathogen.2)
if (runif(1)<rho.2){ #if symptomatic
transmission.parameters$q2h[first]<-inf.path.2.h #A single q parameter for everyone
transmission.parameters$q2g[first]<-inf.path.2.g #A single q parameter for everyone
status.matrix.2$severity[first]<-1
status.matrix.2$TimeSymptomOnset[first]<-current.time+incubation.period(pathogen=pathogen.2)
if (runif(1)<bc.2){
homequarantine.day.2[first]<-status.matrix.2$TimeSymptomOnset[first]
}
time.events<-rbind(time.events,c(current.time,2.1,first))
}else{
transmission.parameters$q2h[first]<-inf.path.2.h*alpha.as.2 #A single q parameter for everyone
transmission.parameters$q2g[first]<-inf.path.2.g*alpha.as.2 #A single q parameter for everyone
status.matrix.2$severity[first]<-2
time.events<-rbind(time.events,c(current.time,2.2,first))
}
if (infectives[first]==0){
infectives[first]<-1
contact.time.within$pr.ctc[first]<-ifelse(transmission.parameters$contact_rate_within[first]!=0,rexp(1,transmission.parameters$contact_rate_within[first])+current.time,Inf)       # I generate the next interarrival time for individual i
if (homequarantine[first]==0){
contact.time.between$pr.ctc[first]<-rexp(1,transmission.parameters$contact_rate_between[first])+current.time # I generate the next interarrival time for individual i
}
}
}
}
}
}
#When also the other pathogen is present.
time.events<-time.events[-1,]
timev.name<-c("time","event","who")
dimnames(time.events)<-list(NULL,timev.name)
C1<-nSeeds.1
Y1<-nSeeds.1
if (t2>0){
C2<-0
Y2<-0
}else{
C2<-nSeeds.2
Y2<-nSeeds.2
}
last.day<-round(max(time.events[,1]))
for (i in 1:last.day){
temp.time<-setdiff(which(time.events[,1]>i),which(time.events[,1]>i+1))
temp.inf.1<-c(which(time.events[temp.time,2]==1.1),which(time.events[temp.time,2]==1.2))
temp.inf.2<-c(which(time.events[temp.time,2]==2.1),which(time.events[temp.time,2]==2.2))
temp.time.1<-setdiff(1:length(time.events[,1]),which(time.events[,1]>i+1))
C1<- c(C1,length((which(time.events[temp.time.1,2]==1.1)))+length((which(time.events[temp.time.1,2]==1.2)))-length((which(time.events[temp.time.1,2]==-1))))
C2<- c(C2,length((which(time.events[temp.time.1,2]==2.1)))+length((which(time.events[temp.time.1,2]==2.2)))-length((which(time.events[temp.time.1,2]==-2))))
Y1<- c(Y1,length(temp.inf.1))
Y2<-c(Y2,length(temp.inf.2))
}
Fs1<-length(which(time.events[,2]==1.1))+length(which(time.events[,2]==1.2))
Fs2<-length(which(time.events[,2]==2.1))+length(which(time.events[,2]==2.2))
epi.details<-data.frame("Days"=0:last.day, "Incidence1"=Y1,"Incidence2"=Y2, "Prevalence1"=C1,"Prevalence2"=C2)
FinalSize<-data.frame("FinalSize1"=Fs1,"FinalSize2"=Fs2)
PeakIncidence<-data.frame("PeakIncidence1"=max(epi.details$Incidence1),"TimePeakIncidence1"=which(epi.details$Incidence1==max(epi.details$Incidence1))[1],"PeakIncidence2"=max(epi.details$Incidence2),"TimePeakIncidence2"=which(epi.details$Incidence2==max(epi.details$Incidence2))[1] )
PeakPrevalence<-data.frame("PeakPrevalence1"=max(epi.details$Prevalence1),"TimePeakPrevalence1"=which(epi.details$Prevalence1==max(epi.details$Prevalence1))[1],"PeakPrevalence2"=max(epi.details$Prevalence2),"TimePeakPrevalence2"=which(epi.details$Prevalence2==max(epi.details$Prevalence2))[1] )
print(FinalSize)
Fs1.c<-c(Fs1.c,FinalSize$FinalSize1)
Fs2.c<-c(Fs2.c,FinalSize$FinalSize2)
}
mean(Fs1.c)
mean(Fs2.c)
# FIG 4 Long-term Competition + Cooperation ----
temp.path<-NULL
temp.bc<-NULL
temp.t2<-NULL
temp.fs<-NULL
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHIComp/4/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg8.27_t20_sigma12_0_sigma21_0_alpha10.5_alpha20.33_rho10.69_rho20.67_lli10.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.fs
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHICoop/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_COVID-19_R11.3_R23.3_qhqg8.27_t20_sigma12_0_sigma21_0_alpha10.33_alpha20.5_rho10.67_rho20.69_lli11.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc21.RData")
temp.path<-NULL
temp.bc<-NULL
temp.t2<-NULL
temp.fs<-NULL
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHICoop/1/MP_Synth_nVertex2500_nNetw100FLU-A_&_COVID-19_R11.3_R23.3_qhqg8.27_t20_sigma12_0_sigma21_0_alpha10.33_alpha20.5_rho10.67_rho20.69_lli11.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc21.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.fs
temp.path<-NULL
temp.bc<-NULL
temp.t2<-NULL
temp.fs<-NULL
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHICoop/4/MP_Synth_nVertex2500_nNetw100FLU-A_&_COVID-19_R11.3_R23.3_qhqg8.27_t20_sigma12_0_sigma21_0_alpha10.33_alpha20.5_rho10.67_rho20.69_lli11.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc21.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("0",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("0",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHICoop/13/MP_Synth_nVertex2500_nNetw100FLU-A_&_COVID-19_R11.3_R23.3_qhqg8.27_t212.5_sigma12_0_sigma21_0_alpha10.33_alpha20.5_rho10.67_rho20.69_lli11.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc21.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("1",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("13",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHICoop/22/MP_Synth_nVertex2500_nNetw100FLU-A_&_COVID-19_R11.3_R23.3_qhqg8.27_t225_sigma12_0_sigma21_0_alpha10.33_alpha20.5_rho10.67_rho20.69_lli11.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc21.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("1",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("26",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHICoop/31/MP_Synth_nVertex2500_nNetw100FLU-A_&_COVID-19_R11.3_R23.3_qhqg8.27_t237.5_sigma12_0_sigma21_0_alpha10.33_alpha20.5_rho10.67_rho20.69_lli11.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc21.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.bc<-c(temp.bc,rep("1",2*length(epi.outbreak)))
temp.t2<-c(temp.t2, rep("39",2*length(epi.outbreak)))
temp.path<-c(temp.path,rep(c("Path1","Path2"),length(epi.outbreak)))
dt.FigCF10<-data.frame("FinalSize"=temp.fs,"Pathogen"=temp.path,"IntroductionTime"=temp.t2, "Compliance"=temp.bc)
dt.FigCF10$Pathogen<-factor(dt.FigCF10$Pathogen, levels = c("Path2","Path1"))
dt.FigCF10$IntroductionTime<-factor(dt.FigCF10$IntroductionTime, levels = c("0","13","26","39"))
aa102<-ggplot(data = dt.FigCF10, aes(x=IntroductionTime, fill=Pathogen,y=FinalSize/2500))+geom_violin()+scale_fill_manual(values = c("#56B4E9","#E69F00"), labels=c("COVID-19","Influenza"))+stat_summary(fun.y=mean, geom="point", shape=15, size=1.5, color="black", fill="black", aes(group=Pathogen),position=position_dodge(.9)) +theme(
panel.background = element_rect(fill = "white",
colour = "white",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.25, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Attack Rate"))+xlab("Seeding time COVID-19 - Influenza progression")+scale_x_discrete(labels=c("Beginning","Ascending ","Peak","Descending"))+labs(fill="Disease")+ylim(c(0,0.9))
plot(aa102)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHICoop/28/MP_Synth_nVertex2500_nNetw100FLU-A_&_COVID-19_R11.3_R23.3_qhqg8.27_t237.5_sigma12_0_sigma21_0_alpha10.33_alpha20.5_rho10.67_rho20.69_lli11.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc21.RData")
# FIG 4 Long-term Competition + Cooperation ----
temp.path<-NULL
temp.bc<-NULL
temp.t2<-NULL
temp.fs<-NULL
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHICoop/31/MP_Synth_nVertex2500_nNetw100FLU-A_&_COVID-19_R11.3_R23.3_qhqg8.27_t237.5_sigma12_0_sigma21_0_alpha10.33_alpha20.5_rho10.67_rho20.69_lli11.5_lli20.5_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc21.RData")
for (i in 1:length(epi.outbreak)){
temp.fs<-c(temp.fs,epi.outbreak[[i]]$FinalSize$FinalSize1,epi.outbreak[[i]]$FinalSize$FinalSize2)
}
temp.fs
epi.outbreak[[1]]$epi.details$Incidence1
epi.outbreak[[1]]$epi.details$Incidence2
epi.outbreak[[1]]$epi.details$Prevalence2
epi.outbreak[[1]]$epi.details$Prevalence1
# FIG 2 Independence + Home isolation ----
temp.path<-NULL
temp.path.pk<-NULL
temp.t2<-NULL
temp.t2.pk<-NULL
temp.prev<-NULL
temp.time<-NULL
temp.nc<-NULL
ncurves<-10
a<-1:(8*ncurves)
a<-as.character(a)
set.seed(24203)
temp.pk<-NULL
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPIND/0/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("0",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("0",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPIND/1/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg8.27_t218_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("13",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("13",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPIND/2/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg8.27_t236_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("26",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("26",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPIND/3/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg8.27_t254_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc10_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("39",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("39",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
dt.Prev<-data.frame("Prevalence"=temp.prev,"Days"=temp.time,"IntroductionTime"=temp.t2, "Pathogen"=temp.path, "TempC"=temp.nc)
dt.Prev$Pathogen<-factor(dt.Prev$Pathogen, levels = c("Path1","Path2"))
dt.Prev$IntroductionTime<-factor(dt.Prev$IntroductionTime, levels = c("0","13","26","39"))
dt.1<-dt.Prev[which(dt.Prev$TempC==1),]
dt.2<-dt.Prev[which(dt.Prev$TempC==2),]
dt.3<-dt.Prev[which(dt.Prev$TempC==3),]
dt.4<-dt.Prev[which(dt.Prev$TempC==4),]
dt.5<-dt.Prev[which(dt.Prev$TempC==5),]
dt.6<-dt.Prev[which(dt.Prev$TempC==6),]
dt.7<-dt.Prev[which(dt.Prev$TempC==7),]
dt.8<-dt.Prev[which(dt.Prev$TempC==8),]
dt.9<-dt.Prev[which(dt.Prev$TempC==9),]
dt.10<-dt.Prev[which(dt.Prev$TempC==10),]
library(dplyr)
vl.dt<-data.frame(IntroductionTime=c("0","13","26","39"),z=c(0,18,36,54))
aa2<-ggplot(data = dt.Prev, aes(x=Days,y=Prevalence/2500, col=Pathogen))+geom_line(data=dt.1)+geom_line(data = dt.2)+geom_line(data = dt.3)+geom_line(data = dt.4)+geom_line(data = dt.5)+geom_line(data = dt.6)+geom_line(data = dt.7)+geom_line(data = dt.8)+geom_line(data = dt.9)+geom_line(data = dt.10)+scale_color_manual(values = c("#56B4E9","#E69F00"),labels=c("COVID-19","FLU"))+geom_vline(aes(xintercept=z),vl.dt, lty=2)+ theme(
panel.background = element_rect(fill = "white",
colour = "white",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Prevalence"))+xlab("Days")+labs(colour="Disease")+facet_grid(~IntroductionTime,  scales = "fixed", labeller = labeller(IntroductionTime=c("0"="Beginning","13"="Ascending","26"="Peak","39"="Descending")))
plot(aa2)
# FLU-COVID - Compliance: COVID 1, FLU 0 - Prevalence curves
temp.path<-NULL
temp.path.pk<-NULL
temp.t2<-NULL
temp.t2.pk<-NULL
temp.prev<-NULL
temp.time<-NULL
temp.nc<-NULL
ncurves<-10
a<-1:(8*ncurves)
a<-as.character(a)
set.seed(123)
temp.pk<-NULL
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHomISo/2/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg8.27_t20_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("0",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("0",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHomISo/5/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg8.27_t225_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("13",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("13",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHomISo/8/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg8.27_t250_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("26",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("26",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
load("~/Library/CloudStorage/GoogleDrive-andrea.torneri@uhasselt.be/My Drive/Work/PhD/Co-infection/Sims/SIMPAPHomISo/11/MP_Synth_nVertex2500_nNetw100COVID-19_&_FLU-A_R13.3_R21.3_qhqg8.27_t275_sigma12_1_sigma21_1_alpha10.5_alpha20.33_rho10.69_rho20.67_lli11_lli21_NetSynth_CtcRed1_PImm0_tSeed1000_bc11_bc20.RData")
for (i in 1:ncurves){
epi.det<-epi.outbreak[[sample(1:length(epi.outbreak),1)]]$epi.details
temp.time<-c(temp.time,epi.det$Days,epi.det$Days)
temp.prev<-c(temp.prev,epi.det$Prevalence1,epi.det$Prevalence2)
temp.t2<-c(temp.t2, rep("39",2*length(epi.det$Days)))
temp.path<-c(temp.path,c(rep("Path1",length(epi.det$Days)),rep("Path2",length(epi.det$Days))))
temp.nc<-c(temp.nc, rep(a[i],2*length(epi.det$Days)))
}
#temp.pk<-NULL
for (i in 1:length(epi.outbreak)){
temp.pk<-c(temp.pk, epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence1,epi.outbreak[[i]]$PeakPrevalence$PeakPrevalence2)
temp.path.pk<-c(temp.path.pk,rep(c("Path1","Path2")))
temp.t2.pk<-c(temp.t2.pk, rep("39",2))
}
quantile(temp.pk,0.025)
quantile(temp.pk,0.975)
dt.Prev<-data.frame("Prevalence"=temp.prev,"Days"=temp.time,"IntroductionTime"=temp.t2, "Pathogen"=temp.path, "TempC"=temp.nc)
dt.Prev$Pathogen<-factor(dt.Prev$Pathogen, levels = c("Path1","Path2"))
dt.Prev$IntroductionTime<-factor(dt.Prev$IntroductionTime, levels = c("0","13","26","39"))
dt.1<-dt.Prev[which(dt.Prev$TempC==1),]
dt.2<-dt.Prev[which(dt.Prev$TempC==2),]
dt.3<-dt.Prev[which(dt.Prev$TempC==3),]
dt.4<-dt.Prev[which(dt.Prev$TempC==4),]
dt.5<-dt.Prev[which(dt.Prev$TempC==5),]
dt.6<-dt.Prev[which(dt.Prev$TempC==6),]
dt.7<-dt.Prev[which(dt.Prev$TempC==7),]
dt.8<-dt.Prev[which(dt.Prev$TempC==8),]
dt.9<-dt.Prev[which(dt.Prev$TempC==9),]
dt.10<-dt.Prev[which(dt.Prev$TempC==10),]
library(dplyr)
vl.dt<-data.frame(IntroductionTime=c("0","13","26","39"),z=c(0,25,50,75))
aa21<-ggplot(data = dt.Prev, aes(x=Days,y=Prevalence/2500, col=Pathogen))+geom_line(data=dt.1)+geom_line(data = dt.2)+geom_line(data = dt.3)+geom_line(data = dt.4)+geom_line(data = dt.5)+geom_line(data = dt.6)+geom_line(data = dt.7)+geom_line(data = dt.8)+geom_line(data = dt.9)+geom_line(data = dt.10)+scale_color_manual(values = c("#56B4E9","#E69F00"),labels=c("COVID-19","Influenza"))+geom_vline(aes(xintercept=z),vl.dt, lty=2)+ theme(
panel.background = element_rect(fill = "white",
colour = "white",
size = 0.75, linetype = "solid"),
panel.grid.major = element_line(size = 0.1, linetype = 'solid',
colour = "gray"),
panel.grid.minor = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
legend.key.size = unit(0.5, "cm"),
legend.key.width = unit(0.5,"cm"),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white", color = NA),
legend.text = element_text(size=14),
legend.position = "top",
legend.title = element_text(size=15, face = "bold"),
axis.text.x = element_text(size=14, angle = 45, vjust = 0.5, hjust = 0.5),
axis.title = element_text(size=15),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 15)
)+ylab(("Prevalence"))+xlab("Days")+labs(colour="Disease")+facet_grid(~IntroductionTime,  scales = "fixed", labeller = labeller(IntroductionTime=c("0"="Beginning","13"="Ascending","26"="Peak","39"="Descending")))+ylim(c(0,0.25))
ggarrange(aa2,aa21,
nrow=2,
labels = c("A","B"), common.legend = TRUE)
#Saved: 950x820
