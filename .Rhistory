hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}else{
hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}
}
if (next.evts=="Recovery"){
current.time<-events$Recovery
recovered<-which(hh.data$recovery==current.time)
hh.data$recovery[recovered]<-Inf
hh.data$status[recovered]<--1
contact.time[recovered,2:3]<-rep(NA,2)
}
if (next.evts=="HomeIso"){
current.time<-events$SHomeIso
symptomatic<-which(hh.data$SO==current.time)
hh.data$SO[symptomatic]<-Inf
contact.time[symptomatic,2:3]<-rep(NA,2)
if (ctc.dec!=0){
hh.data$betah[symptomatic]<-hh.data$betah[symptomatic]*ctc.dec
hh.data$index.contact[symptomatic]<-1
}
}
}
AR[[hh.size[hh.data$members[1]]]]<-c(AR[[hh.size[hh.data$members[1]]]],length(which(hh.data$status==-1)))
# sar - NA when no symptomatic infection are register
}
}
ar.a<-0
for (s in 1:max(unique(hh.size))){
ar.a[s]<-ifelse(length(AR[[s]])>1,mean(AR[[s]][-1]),0)
}
AR<-list()
for (s in 1:max(unique(hh.size))) {
AR[[s]]<-0
}
for (w in unique(hh.id)){
if (min(hh.size[which(hh.id==w)])>1){
hh.data<-data.frame("members"= which(hh.id==w),"id"=1:length(which(hh.id==w)),"status"=0,"recovery"=Inf, "index.contact"=0, "betah"=0, "SO"=Inf, "ToI"=Inf, "IM"=q.h)
#index case
for (r in hh.data$id){
ifelse(length(get.neighborhood(HH.network, hh.data$members[r]))>0,hh.data$betah[r]<-(length(get.neighborhood(HH.network, hh.data$members[r]))),hh.data$betah[r]<-1/rexp(1,1/exp(100)))
}
primary<-sample(1:length(hh.data$members),1)
hh.data$status[primary]<-1
hh.data$recovery[primary]<-mu
hh.data$index.contact[primary]<-1
if(runif(1)<compl){
hh.data$SO[primary]<-current.time+incubation.period(pathogen = pathogen)
}
hh.data$ToI[primary]<-0
contact.time<-data.frame("id"=hh.data$members,"pr.ctc"=rep(NA,length(hh.data$members)),"pr.infectee"=rep(NA,length(hh.data$members)))   #matrix containing the proposed time of the next possible infectious contact (first colum)
current.time<-0
events<-data.frame(NextCtc        = Inf,
HomeIso       = Inf,
Recovery       = Inf)
while ((length(which(hh.data$status==1))>0)) { # till there is at least one infectious individual
for (i in which(hh.data$index.contact==1) ){ # for all the individuals that has to propose a new contact
temp.contact.time<-rexp(1,hh.data$betah[i])+current.time
hh.members.contacted<-get.neighborhood(HH.network,hh.data$members[i], type = "out")
hh.data$index.contact[i]<-0
ifelse(length(hh.members.contacted)>0,contact.time$pr.infectee[i] <-sample(hh.members.contacted,1),contact.time$pr.infectee[i] <-NA)
if (length(hh.members.contacted)==1){contact.time$pr.infectee[i]<-hh.members.contacted}
ifelse(length(hh.members.contacted)>0,contact.time$pr.ctc[i]<-temp.contact.time ,contact.time$pr.ctc[i]<-NA)
}
#computation of the next event
ifelse(length(which(is.na(contact.time$pr.ctc)==FALSE))>0,events$NextCtc<-min(contact.time$pr.ctc, na.rm = T),events$NextCtc<-Inf)
events$Recovery<-min(hh.data$recovery, na.rm = T)
events$SymptOns<-min(hh.data$SO, na.rm = T)
next.evts<-colnames(events)[min(events)==events]
if (length(next.evts)>1){
next.evts<-sample(next.evts,1)
}
#next event is an infection
if (next.evts=="NextCtc"){
current.time<-events$NextCtc
infector<-which(contact.time$pr.ctc ==current.time)
infectee<-hh.data$id[which(hh.data$members==contact.time$pr.infectee[infector])]
if (hh.data$status[infectee]==0 & runif(1)<(InfMeasure(t=current.time-hh.data$ToI[infector], pathogen = pathogen)*hh.data$IM[infector])){
hh.data$status[infectee]<-1
hh.data$recovery[infectee]<-current.time+mu
if (runif(1)<prob.asym){
hh.data$IM[infectee]<-hh.data$IM[infectee]*asymp.rel.inf
}else{
if(runif(1)<compl){
hh.data$SO[infectee]<-current.time+incubation.period(pathogen = pathogen)
}
}
hh.data$ToI[infectee]<-current.time
hh.data$index.contact[infectee]<-1
hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}else{
hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}
}
if (next.evts=="Recovery"){
current.time<-events$Recovery
recovered<-which(hh.data$recovery==current.time)
hh.data$recovery[recovered]<-Inf
hh.data$status[recovered]<--1
contact.time[recovered,2:3]<-rep(NA,2)
}
if (next.evts=="HomeIso"){
current.time<-events$SHomeIso
symptomatic<-which(hh.data$SO==current.time)
hh.data$SO[symptomatic]<-Inf
contact.time[symptomatic,2:3]<-rep(NA,2)
if (ctc.dec!=0){
hh.data$betah[symptomatic]<-hh.data$betah[symptomatic]*ctc.dec
hh.data$index.contact[symptomatic]<-1
}
}
}
AR[[hh.size[hh.data$members[1]]]]<-c(AR[[hh.size[hh.data$members[1]]]],length(which(hh.data$status==-1)))
# sar - NA when no symptomatic infection are register
}
}
ar.s<-0
for (s in 1:max(unique(hh.size))){
ar.s[s]<-ifelse(length(AR[[s]])>1,mean(AR[[s]][-1]),0)
}
FsH.a<-((sum(ar.a*(h.n)*(1:max(unique(hh.size)))))/mu.h)
FsH.s<-((sum(ar.s*(h.n)*(1:max(unique(hh.size)))))/mu.h)
beta.g.a<- beta.g*(asymp.rel.inf*h.n[1]+ (asymp.rel.inf/2+(asymp.rel.inf*prob.asym+(1-prob.asym))/2)*h.n[2]+(asymp.rel.inf/3+(asymp.rel.inf*prob.asym+(1-prob.asym))/3)*h.n[3]+(asymp.rel.inf/4+(asymp.rel.inf*prob.asym+(1-prob.asym))/4)*h.n[4]+(asymp.rel.inf/5+(asymp.rel.inf*prob.asym+(1-prob.asym))/5)*h.n[5]+(asymp.rel.inf/6+(asymp.rel.inf*prob.asym+(1-prob.asym))/6)*h.n[6]+(asymp.rel.inf/7+(asymp.rel.inf*prob.asym+(1-prob.asym))/7)*h.n[7])
beta.g.s<- beta.g*(h.n[1]+ (1/2+(asymp.rel.inf*prob.asym+(1-prob.asym))/2)*h.n[2]+(1/3+(asymp.rel.inf*prob.asym+(1-prob.asym))/3)*h.n[3]+(1/4+(asymp.rel.inf*prob.asym+(1-prob.asym))/4)*h.n[4]+(1/5+(asymp.rel.inf*prob.asym+(1-prob.asym))/5)*h.n[5]+(1/6+(asymp.rel.inf*prob.asym+(1-prob.asym))/6)*h.n[6]+(1/7+(asymp.rel.inf*prob.asym+(1-prob.asym))/7)*h.n[7])
m.aa<-FsH.a*beta.g.a*prob.asym
m.as<-FsH.a*beta.g.a*(1-prob.asym)
m.sa<-FsH.s*beta.g.s*prob.asym
m.ss<-FsH.s*beta.g.s*(1-prob.asym)
#m.aa<-((sum(ar.a*(h.n)*(1:max(unique(hh.size)))))/mu.h)*beta.g*(asymp.rel.inf*prob.asym+(1-prob.asym))*prob.asym
#m.as<-((sum(ar.a*(h.n)*(1:max(unique(hh.size)))))/mu.h)*beta.g*(asymp.rel.inf*prob.asym+(1-prob.asym))*(1-prob.asym)
#m.sa<-((sum(ar.s*(h.n)*(1:max(unique(hh.size)))))/mu.h)*beta.g*prob.asym*(asymp.rel.inf*prob.asym+(1-prob.asym))
#m.ss<-((sum(ar.s*(h.n)*(1:max(unique(hh.size)))))/mu.h)*beta.g*(asymp.rel.inf*prob.asym+(1-prob.asym))*(1-prob.asym)
R0[j]<-0.5*(m.aa+m.ss)+sqrt((((m.aa+m.ss)^2)/4)+m.as*m.sa)
print(j)
}
AR<-list()
for (s in 1:max(unique(hh.size))) {
AR[[s]]<-0
}
for (w in unique(hh.id)){
if (min(hh.size[which(hh.id==w)])>1){
hh.data<-data.frame("members"= which(hh.id==w),"id"=1:length(which(hh.id==w)),"status"=0,"recovery"=Inf, "index.contact"=0, "betah"=0, "SO"=Inf, "ToI"=Inf, "IM"=q.h)
#index case
for (r in hh.data$id){
ifelse(length(get.neighborhood(HH.network, hh.data$members[r]))>0,hh.data$betah[r]<-(length(get.neighborhood(HH.network, hh.data$members[r]))),hh.data$betah[r]<-1/rexp(1,1/exp(100)))
}
primary<-sample(1:length(hh.data$members),1)
hh.data$status[primary]<-1
hh.data$recovery[primary]<-mu
hh.data$index.contact[primary]<-1
hh.data$IM[primary]<-hh.data$IM[primary]*asymp.rel.inf
hh.data$ToI[primary]<-0
contact.time<-data.frame("id"=hh.data$members,"pr.ctc"=rep(NA,length(hh.data$members)),"pr.infectee"=rep(NA,length(hh.data$members)))   #matrix containing the proposed time of the next possible infectious contact (first colum)
current.time<-0
events<-data.frame(NextCtc        = Inf,
HomeIso       = Inf,
Recovery       = Inf)
while ((length(which(hh.data$status==1))>0)) { # till there is at least one infectious individual
for (i in which(hh.data$index.contact==1) ){ # for all the individuals that has to propose a new contact
temp.contact.time<-rexp(1,hh.data$betah[i])+current.time
hh.members.contacted<-get.neighborhood(HH.network,hh.data$members[i], type = "out")
hh.data$index.contact[i]<-0
ifelse(length(hh.members.contacted)>0,contact.time$pr.infectee[i] <-sample(hh.members.contacted,1),contact.time$pr.infectee[i] <-NA)
if (length(hh.members.contacted)==1){contact.time$pr.infectee[i]<-hh.members.contacted}
ifelse(length(hh.members.contacted)>0,contact.time$pr.ctc[i]<-temp.contact.time ,contact.time$pr.ctc[i]<-NA)
}
#computation of the next event
ifelse(length(which(is.na(contact.time$pr.ctc)==FALSE))>0,events$NextCtc<-min(contact.time$pr.ctc, na.rm = T),events$NextCtc<-Inf)
events$Recovery<-min(hh.data$recovery, na.rm = T)
events$SymptOns<-min(hh.data$SO, na.rm = T)
next.evts<-colnames(events)[min(events)==events]
if (length(next.evts)>1){
next.evts<-sample(next.evts,1)
}
#next event is an infection
if (next.evts=="NextCtc"){
current.time<-events$NextCtc
infector<-which(contact.time$pr.ctc ==current.time)
infectee<-hh.data$id[which(hh.data$members==contact.time$pr.infectee[infector])]
if (hh.data$status[infectee]==0 & runif(1)<(InfMeasure(t=current.time-hh.data$ToI[infector], pathogen = pathogen)*hh.data$IM[infector])){
hh.data$status[infectee]<-1
hh.data$recovery[infectee]<-current.time+mu
if (runif(1)<prob.asym){
hh.data$IM[infectee]<-hh.data$IM[infectee]*asymp.rel.inf
}else{
if(runif(1)<compl){
hh.data$SO[infectee]<-current.time+incubation.period(pathogen = pathogen)
}
}
hh.data$ToI[infectee]<-current.time
hh.data$index.contact[infectee]<-1
hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}else{
hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}
}
if (next.evts=="Recovery"){
current.time<-events$Recovery
recovered<-which(hh.data$recovery==current.time)
hh.data$recovery[recovered]<-Inf
hh.data$status[recovered]<--1
contact.time[recovered,2:3]<-rep(NA,2)
}
if (next.evts=="HomeIso"){
current.time<-events$SHomeIso
symptomatic<-which(hh.data$SO==current.time)
hh.data$SO[symptomatic]<-Inf
contact.time[symptomatic,2:3]<-rep(NA,2)
if (ctc.dec!=0){
hh.data$betah[symptomatic]<-hh.data$betah[symptomatic]*ctc.dec
hh.data$index.contact[symptomatic]<-1
}
}
}
AR[[hh.size[hh.data$members[1]]]]<-c(AR[[hh.size[hh.data$members[1]]]],length(which(hh.data$status==-1)))
# sar - NA when no symptomatic infection are register
}
}
AR
ar.a<-0
for (s in 1:max(unique(hh.size))){
ar.a[s]<-ifelse(length(AR[[s]])>1,mean(AR[[s]][-1]),0)
}
ar.a
ar.s<-0
ar.s[1]<-1
for (s in 2:max(unique(hh.size))){
ar.s[s]<-ifelse(length(AR[[s]])>1,mean(AR[[s]][-1]),0)
}
ar.a
ar.s
AR
AR<-list()
for (s in 1:max(unique(hh.size))) {
AR[[s]]<-0
}
for (w in unique(hh.id)){
if (min(hh.size[which(hh.id==w)])>1){
hh.data<-data.frame("members"= which(hh.id==w),"id"=1:length(which(hh.id==w)),"status"=0,"recovery"=Inf, "index.contact"=0, "betah"=0, "SO"=Inf, "ToI"=Inf, "IM"=q.h)
#index case
for (r in hh.data$id){
ifelse(length(get.neighborhood(HH.network, hh.data$members[r]))>0,hh.data$betah[r]<-(length(get.neighborhood(HH.network, hh.data$members[r]))),hh.data$betah[r]<-1/rexp(1,1/exp(100)))
}
primary<-sample(1:length(hh.data$members),1)
hh.data$status[primary]<-1
hh.data$recovery[primary]<-mu
hh.data$index.contact[primary]<-1
hh.data$IM[primary]<-hh.data$IM[primary]*asymp.rel.inf
hh.data$ToI[primary]<-0
contact.time<-data.frame("id"=hh.data$members,"pr.ctc"=rep(NA,length(hh.data$members)),"pr.infectee"=rep(NA,length(hh.data$members)))   #matrix containing the proposed time of the next possible infectious contact (first colum)
current.time<-0
events<-data.frame(NextCtc        = Inf,
HomeIso       = Inf,
Recovery       = Inf)
while ((length(which(hh.data$status==1))>0)) { # till there is at least one infectious individual
for (i in which(hh.data$index.contact==1) ){ # for all the individuals that has to propose a new contact
temp.contact.time<-rexp(1,hh.data$betah[i])+current.time
hh.members.contacted<-get.neighborhood(HH.network,hh.data$members[i], type = "out")
hh.data$index.contact[i]<-0
ifelse(length(hh.members.contacted)>0,contact.time$pr.infectee[i] <-sample(hh.members.contacted,1),contact.time$pr.infectee[i] <-NA)
if (length(hh.members.contacted)==1){contact.time$pr.infectee[i]<-hh.members.contacted}
ifelse(length(hh.members.contacted)>0,contact.time$pr.ctc[i]<-temp.contact.time ,contact.time$pr.ctc[i]<-NA)
}
#computation of the next event
ifelse(length(which(is.na(contact.time$pr.ctc)==FALSE))>0,events$NextCtc<-min(contact.time$pr.ctc, na.rm = T),events$NextCtc<-Inf)
events$Recovery<-min(hh.data$recovery, na.rm = T)
events$SymptOns<-min(hh.data$SO, na.rm = T)
next.evts<-colnames(events)[min(events)==events]
if (length(next.evts)>1){
next.evts<-sample(next.evts,1)
}
#next event is an infection
if (next.evts=="NextCtc"){
current.time<-events$NextCtc
infector<-which(contact.time$pr.ctc ==current.time)
infectee<-hh.data$id[which(hh.data$members==contact.time$pr.infectee[infector])]
if (hh.data$status[infectee]==0 & runif(1)<(InfMeasure(t=current.time-hh.data$ToI[infector], pathogen = pathogen)*hh.data$IM[infector])){
hh.data$status[infectee]<-1
hh.data$recovery[infectee]<-current.time+mu
if (runif(1)<prob.asym){
hh.data$IM[infectee]<-hh.data$IM[infectee]*asymp.rel.inf
}else{
if(runif(1)<compl){
hh.data$SO[infectee]<-current.time+incubation.period(pathogen = pathogen)
}
}
hh.data$ToI[infectee]<-current.time
hh.data$index.contact[infectee]<-1
hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}else{
hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}
}
if (next.evts=="Recovery"){
current.time<-events$Recovery
recovered<-which(hh.data$recovery==current.time)
hh.data$recovery[recovered]<-Inf
hh.data$status[recovered]<--1
contact.time[recovered,2:3]<-rep(NA,2)
}
if (next.evts=="HomeIso"){
current.time<-events$SHomeIso
symptomatic<-which(hh.data$SO==current.time)
hh.data$SO[symptomatic]<-Inf
contact.time[symptomatic,2:3]<-rep(NA,2)
if (ctc.dec!=0){
hh.data$betah[symptomatic]<-hh.data$betah[symptomatic]*ctc.dec
hh.data$index.contact[symptomatic]<-1
}
}
}
AR[[hh.size[hh.data$members[1]]]]<-c(AR[[hh.size[hh.data$members[1]]]],length(which(hh.data$status==-1)))
# sar - NA when no symptomatic infection are register
}
}
AR<-list()
for (s in 1:max(unique(hh.size))) {
AR[[s]]<-0
}
for (w in unique(hh.id)){
if (min(hh.size[which(hh.id==w)])>1){
hh.data<-data.frame("members"= which(hh.id==w),"id"=1:length(which(hh.id==w)),"status"=0,"recovery"=Inf, "index.contact"=0, "betah"=0, "SO"=Inf, "ToI"=Inf, "IM"=q.h)
#index case
for (r in hh.data$id){
ifelse(length(get.neighborhood(HH.network, hh.data$members[r]))>0,hh.data$betah[r]<-(length(get.neighborhood(HH.network, hh.data$members[r]))),hh.data$betah[r]<-1/rexp(1,1/exp(100)))
}
primary<-sample(1:length(hh.data$members),1)
hh.data$status[primary]<-1
hh.data$recovery[primary]<-mu
hh.data$index.contact[primary]<-1
hh.data$IM[primary]<-hh.data$IM[primary]*asymp.rel.inf
hh.data$ToI[primary]<-0
contact.time<-data.frame("id"=hh.data$members,"pr.ctc"=rep(NA,length(hh.data$members)),"pr.infectee"=rep(NA,length(hh.data$members)))   #matrix containing the proposed time of the next possible infectious contact (first colum)
current.time<-0
events<-data.frame(NextCtc        = Inf,
HomeIso       = Inf,
Recovery       = Inf)
while ((length(which(hh.data$status==1))>0)) { # till there is at least one infectious individual
for (i in which(hh.data$index.contact==1) ){ # for all the individuals that has to propose a new contact
temp.contact.time<-rexp(1,hh.data$betah[i])+current.time
hh.members.contacted<-get.neighborhood(HH.network,hh.data$members[i], type = "out")
hh.data$index.contact[i]<-0
ifelse(length(hh.members.contacted)>0,contact.time$pr.infectee[i] <-sample(hh.members.contacted,1),contact.time$pr.infectee[i] <-NA)
if (length(hh.members.contacted)==1){contact.time$pr.infectee[i]<-hh.members.contacted}
ifelse(length(hh.members.contacted)>0,contact.time$pr.ctc[i]<-temp.contact.time ,contact.time$pr.ctc[i]<-NA)
}
#computation of the next event
ifelse(length(which(is.na(contact.time$pr.ctc)==FALSE))>0,events$NextCtc<-min(contact.time$pr.ctc, na.rm = T),events$NextCtc<-Inf)
events$Recovery<-min(hh.data$recovery, na.rm = T)
events$SymptOns<-min(hh.data$SO, na.rm = T)
next.evts<-colnames(events)[min(events)==events]
if (length(next.evts)>1){
next.evts<-sample(next.evts,1)
}
#next event is an infection
if (next.evts=="NextCtc"){
current.time<-events$NextCtc
infector<-which(contact.time$pr.ctc ==current.time)
infectee<-hh.data$id[which(hh.data$members==contact.time$pr.infectee[infector])]
if (hh.data$status[infectee]==0 & runif(1)<(InfMeasure(t=current.time-hh.data$ToI[infector], pathogen = pathogen)*hh.data$IM[infector])){
hh.data$status[infectee]<-1
hh.data$recovery[infectee]<-current.time+mu
if (runif(1)<prob.asym){
hh.data$IM[infectee]<-hh.data$IM[infectee]*asymp.rel.inf
}else{
if(runif(1)<compl){
hh.data$SO[infectee]<-current.time+incubation.period(pathogen = pathogen)
}
}
hh.data$ToI[infectee]<-current.time
hh.data$index.contact[infectee]<-1
hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}else{
hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}
}
if (next.evts=="Recovery"){
current.time<-events$Recovery
recovered<-which(hh.data$recovery==current.time)
hh.data$recovery[recovered]<-Inf
hh.data$status[recovered]<--1
contact.time[recovered,2:3]<-rep(NA,2)
}
if (next.evts=="HomeIso"){
current.time<-events$SHomeIso
symptomatic<-which(hh.data$SO==current.time)
hh.data$SO[symptomatic]<-Inf
contact.time[symptomatic,2:3]<-rep(NA,2)
if (ctc.dec!=0){
hh.data$betah[symptomatic]<-hh.data$betah[symptomatic]*ctc.dec
hh.data$index.contact[symptomatic]<-1
}
}
}
AR[[hh.size[hh.data$members[1]]]]<-c(AR[[hh.size[hh.data$members[1]]]],length(which(hh.data$status==-1)))
# sar - NA when no symptomatic infection are register
}
}
ar.a<-0
ar.a[1]<-1
for (s in 2:max(unique(hh.size))){
ar.a[s]<-ifelse(length(AR[[s]])>1,mean(AR[[s]][-1]),0)
}
AR<-list()
for (s in 1:max(unique(hh.size))) {
AR[[s]]<-0
}
for (w in unique(hh.id)){
if (min(hh.size[which(hh.id==w)])>1){
hh.data<-data.frame("members"= which(hh.id==w),"id"=1:length(which(hh.id==w)),"status"=0,"recovery"=Inf, "index.contact"=0, "betah"=0, "SO"=Inf, "ToI"=Inf, "IM"=q.h)
#index case
for (r in hh.data$id){
ifelse(length(get.neighborhood(HH.network, hh.data$members[r]))>0,hh.data$betah[r]<-(length(get.neighborhood(HH.network, hh.data$members[r]))),hh.data$betah[r]<-1/rexp(1,1/exp(100)))
}
primary<-sample(1:length(hh.data$members),1)
hh.data$status[primary]<-1
hh.data$recovery[primary]<-mu
hh.data$index.contact[primary]<-1
if(runif(1)<compl){
hh.data$SO[primary]<-current.time+incubation.period(pathogen = pathogen)
}
hh.data$ToI[primary]<-0
contact.time<-data.frame("id"=hh.data$members,"pr.ctc"=rep(NA,length(hh.data$members)),"pr.infectee"=rep(NA,length(hh.data$members)))   #matrix containing the proposed time of the next possible infectious contact (first colum)
current.time<-0
events<-data.frame(NextCtc        = Inf,
HomeIso       = Inf,
Recovery       = Inf)
while ((length(which(hh.data$status==1))>0)) { # till there is at least one infectious individual
for (i in which(hh.data$index.contact==1) ){ # for all the individuals that has to propose a new contact
temp.contact.time<-rexp(1,hh.data$betah[i])+current.time
hh.members.contacted<-get.neighborhood(HH.network,hh.data$members[i], type = "out")
hh.data$index.contact[i]<-0
ifelse(length(hh.members.contacted)>0,contact.time$pr.infectee[i] <-sample(hh.members.contacted,1),contact.time$pr.infectee[i] <-NA)
if (length(hh.members.contacted)==1){contact.time$pr.infectee[i]<-hh.members.contacted}
ifelse(length(hh.members.contacted)>0,contact.time$pr.ctc[i]<-temp.contact.time ,contact.time$pr.ctc[i]<-NA)
}
#computation of the next event
ifelse(length(which(is.na(contact.time$pr.ctc)==FALSE))>0,events$NextCtc<-min(contact.time$pr.ctc, na.rm = T),events$NextCtc<-Inf)
events$Recovery<-min(hh.data$recovery, na.rm = T)
events$SymptOns<-min(hh.data$SO, na.rm = T)
next.evts<-colnames(events)[min(events)==events]
if (length(next.evts)>1){
next.evts<-sample(next.evts,1)
}
#next event is an infection
if (next.evts=="NextCtc"){
current.time<-events$NextCtc
infector<-which(contact.time$pr.ctc ==current.time)
infectee<-hh.data$id[which(hh.data$members==contact.time$pr.infectee[infector])]
if (hh.data$status[infectee]==0 & runif(1)<(InfMeasure(t=current.time-hh.data$ToI[infector], pathogen = pathogen)*hh.data$IM[infector])){
hh.data$status[infectee]<-1
hh.data$recovery[infectee]<-current.time+mu
if (runif(1)<prob.asym){
hh.data$IM[infectee]<-hh.data$IM[infectee]*asymp.rel.inf
}else{
if(runif(1)<compl){
hh.data$SO[infectee]<-current.time+incubation.period(pathogen = pathogen)
}
}
hh.data$ToI[infectee]<-current.time
hh.data$index.contact[infectee]<-1
hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}else{
hh.data$index.contact[infector]<-1
contact.time[infector,2:3]<-NA
}
}
if (next.evts=="Recovery"){
current.time<-events$Recovery
recovered<-which(hh.data$recovery==current.time)
hh.data$recovery[recovered]<-Inf
hh.data$status[recovered]<--1
contact.time[recovered,2:3]<-rep(NA,2)
}
if (next.evts=="HomeIso"){
current.time<-events$SHomeIso
symptomatic<-which(hh.data$SO==current.time)
hh.data$SO[symptomatic]<-Inf
contact.time[symptomatic,2:3]<-rep(NA,2)
if (ctc.dec!=0){
hh.data$betah[symptomatic]<-hh.data$betah[symptomatic]*ctc.dec
hh.data$index.contact[symptomatic]<-1
}
}
}
AR[[hh.size[hh.data$members[1]]]]<-c(AR[[hh.size[hh.data$members[1]]]],length(which(hh.data$status==-1)))
# sar - NA when no symptomatic infection are register
}
}
ar.s<-0
ar.s[1]<-1
for (s in 2:max(unique(hh.size))){
ar.s[s]<-ifelse(length(AR[[s]])>1,mean(AR[[s]][-1]),0)
}
ar.a
ar.s
FsH.a<-((sum(ar.a*(h.n)*(1:max(unique(hh.size)))))/mu.h)
FsH.a
ar.a[1]<-0
FsH.a<-((sum(ar.a*(h.n)*(1:max(unique(hh.size)))))/mu.h)
FsH.a
